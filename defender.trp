 // Defender.trp  - a computer program for the Turborisk game by Mario Ferrari
 // written by Martin Nehrdich
 //
 //
 // This program is a spinoff of digger.trp
 // Main change is, that bonusarmies of a continent owned by defender
 // will be used to defend the bordering territories of the continent.
 // Second change is that MinAttackratio is raised by 0.25 for each conquered territory.
 // Therefor defender is more defensive than digger.
 // Another change is, that he attacks always by "do or die" until the ToTerritory is
 // conquered or too many armies have been lost. (To speed up calculations)
 //
 // Although Defender is not as strong as Digger, I wanted to publish Defender
 // to increase the number of available computer-tactics. Take what you want and
 // copy it into your own progs!
 //
 // Enjoy fighting,
 // and may the Force be with you,
 //    Martin
 // e-mail: Krulle@redseven.de
 //
 //
 // Procedures and comments:
 //
 // ASSIGNMENT:
 // If someone (doesn't matter who) has all territories except one on a continent, 
 // I take the last one, either for my own bonus, or to avoid giving him the bonus.
 // I prefer assigning of territories on small continents, especially if I border other
 // owned territories by me.
 // I also prefer territories on empty continents.
 // Actually, I prefer random assignment, but I wanted something programmed, not just the
 // last free territory assigned. (Other way round than simple.trp).
 //
 // PLACEMENT: 
 // FIRST place one army on each territory which borders another continent if the continent
 // with the territory is owned by me.
 // THEN place armies in the territory with worst ratio own forces/enemy forces bordering
 // with special efforts on territories having only one bordering enemy territory (tripled
 // Ratio if enemy territory is enclosed and force ratio <=2.1, if force ratio >2.1 do not place
 // armies here (force should be big enough), doubled ratio if it's just a one-front territory,
 // but only the strongest territory will be reinforced.
 // If at least half the continent is owned, the Ratio is also increased by 4 * ratio
 // owned/total territories on continent. The Ratio is decreased if there are too many fronts
 // (TPressure gets too big with more fronts, but TStrongestFront is not high enough.)
 // The Ratio is also increased by 3/2 if the territory is bordering a continent owned by me
 // (to defend it better).
 //
 // ATTACK:
 // Check if "DoOrDie"-attack can be continued,
 // if not choose new "DoOrDie"-attack by choosing the war with the best ratio
 // (own forces - 2)/enemy forces,
 // a first occupation is a must (enemy may outnumber me by 3:2), following attacks only
 // if the ratio is > 0.66 + (0.25*(number of conquered territories))
 // Ratio is tripled if the attacked territory is completely encircled and
 //  the forceratio is reached by two-thirds (the conquered territory would not be front)
 // Ratio is doubled if minimal forceratio is reached and the territory has only
 //  one bordering enemy territory.
 // Ratio is doubled (again) if minimal forceratio is reached and the
 //  attacked territory is on same continent.
 // Ratio is multiplied by 2.1 if minimal forceratio is reached and the territory attacked
 //  is on a continent which is owned completely by someone.
 // Ratio is doubled (again) if minimal forceratio is reached and the
 //  attacked territory is the last one the attacked enemy owns (to conquer his cards).
 // Decrease Ratio by 10% if the attacked territory belongs to another player with the same program.
 //
 // OCCUPATION:
 // If both territories are 'front' balance armies, except if both territories border the
 // same enemy territory as only front. In this case all armies will be moved (to increase
 // attackpossibility).
 // If only the conquered is front move all armies
 // else do not move armies.
 //
 // FORTIFICATION: look for weakest front and reinforce it, if not possible,
 // reinforce continentborders, if not possible,
 // move the biggest army on a non-front-territory to any (random) bordering territory.
 //
 //
 //
 // Usage of UBuffer:
 // 1-42 : If territory received it's bonusarmy already (0=did NOT receive yet, 1=has already received it's bonusarmy)
 // 43 : MinAttackRatio (is increased by 0.25 for each successful conquering, reseted to 0.66 during placement of armies)
 // 44 : "do or die" FromTerritory
 // 45 : "do or die" ToTerritory
 //
 //
 // Symbols ULog and UMessage: #9 : Tab;   #10 : New Line



PROCEDURE Assignment;
VAR
  T, B, BT, C,
  PT, PA,            // Players Territories and Armies
  LP, LT, LA,        // Leader on this continent, his territories and armies
  ET, EA : Integer;  // Enemy Territories and Armies
  Ratio, MaxRatio  : Double;
BEGIN
  ToTerritory:=0;
  MaxRatio:=0;
  T:=42;
  REPEAT
    IF TOwner(T)=0 THEN
    BEGIN
      C:=TContinent(T);
      CAnalysis(C, PT,PA,ET,EA);
      Ratio:=(PT+1)/(CTerritoriesCount(C)+ET);
      IF ET = 0 THEN Ratio:=Ratio*2;       // IF no enemy on this continent yet, take it.
      FOR B:= 1 TO TBordersCount(T) DO
      BEGIN
        BT:=TBorder(T,B);
        IF TOwner(BT)=PMe THEN Ratio:=Ratio*1.1;  // Having myself as neighbour makes less fronts to defend
        IF COwner(TContinent(BT))=PMe THEN Ratio:=Ratio*1.25
      END;
      CLeader(C, LP,LT,LA);
      IF (LT=CTerritoriesCount(C)-1) AND (LP>0) THEN Ratio:=Ratio*10+10;  // I want THIS territory, either to avoid the enemy getting the bonus, or to make it my bonus
      IF Ratio>MaxRatio THEN
      BEGIN
        ToTerritory:=T;
        MaxRatio:=Ratio
      END;
    END;
    T:=T-1
  UNTIL T<1;
  IF ToTerritory=0 THEN
   UMessage('Player #',PMe,' (',PName(PMe),')',#10,
            'Critical Error!',#10,
            'Procedure Assignment called',#10,
            'but no free territory found');
END; //PROCEDURE Assignment



PROCEDURE Placement;
VAR
  T, B, PT, PA, ET, EA    : Integer;
  Ratio, MaxRatio, CRatio : Double;
  BeforeFirstAttackTurn   : Boolean;

  //Function returns false if the territory to attack would become a front of me
  FUNCTION EnemyTerritoryIsEnclosed(TT:Integer):Boolean;
  VAR BT, BTF : Integer;
      ETIE : Boolean;
  BEGIN
    ETIE := TRUE;
    FOR BTF := 1 TO TBordersCount(TT) DO
    BEGIN
      BT := TBorder (TT,BTF);
      IF TOwner(BT)<>PMe THEN ETIE:=False;  //Territory would remain a border
    END;
    result:=ETIE;
  END; //function EnemyTerritoryIsEnclosed(TT:Integer):Boolean;


  //Function returns true, if there's a defending bonus-army to place,
  //the argument (TT) returns the territory where to set this army
  FUNCTION CBonusAssignment(VAR TT:Integer):Boolean;
  VAR CBA : Boolean;
      C, CT, TToGo : Integer;

   FUNCTION TBordersAnotherContinent (TTBAC:Integer): Boolean;
   VAR BTBAC, CTBAC : Integer;
       TBAC : Boolean;
   BEGIN
     TBAC := False;
     CTBAC:=TContinent(TTBAC);
     FOR BTBAC:=1 TO TBordersCount (TTBAC) DO
      IF TContinent(TBorder(TTBAC,BTBAC)) <> CTBAC THEN
       TBAC:=True;
     result:=TBAC
   END;

  BEGIN      //FUNCTION CBonusAssignment
    TT:=0;
    CBA:=False;
    IF NOT SConquest THEN     // cardarmies are not counted if cards have been conquered
     FOR C:= 1 TO 6 DO
      IF COwner(C)=PMe THEN
       FOR CT:=1 TO CTerritoriesCount(C) DO
    BEGIN
      TToGo := CTerritory(C, CT);
      IF NOT CBA THEN
       IF TBordersAnotherContinent (TToGo) THEN
      BEGIN
        IF UBufferGet(TToGo)=0 THEN
        BEGIN
          TT:=TToGo;
          UBufferSet(TT,1);
          CBA:= True;
        END;
      END;
    END;
    result:=CBA
  END;      //FUNCTION CBonusAssignment

BEGIN       //PROCEDURE Placement
  // if each bonus-territory has an extra-defender,
  // reinforce territory with greatest ratio between total enemy armies and own armies
  // modified by some factors (on same continent, number of fronts, ...)
  ToTerritory:=0;
  MaxRatio:=0;

  BeforeFirstAttackTurn:=False;
  FOR T:=1 TO 10 DO
   IF PActive(T) AND (T<>PMe) AND (PNewArmies(T)>0) THEN BeforeFirstAttackTurn:=True;
  // I need to defend every territory if BFAT is True. Later I only strengthen certain
  // territories to prevent useless placement of armies.

  T:=0;
  IF (NOT BeforeFirstAttackTurn) AND CBonusAssignment(T) THEN
  BEGIN
    ULog('BonusAssignment to ',TName(T));
    ToTerritory:=T
  END
  ELSE
  BEGIN
    T:=42;
    REPEAT
      IF TIsFront(T) THEN         // territory is mine and front
      BEGIN
        Ratio := TPressure(T) / TArmies(T);

        //Increase the pressure if there is only one territory attackable (easy defending)
        IF TFrontsCount(T)=1 THEN
        BEGIN
          ET:=TFront(T,1);
          IF EnemyTerritoryIsEnclosed(ET) THEN
          BEGIN
            IF Ratio > 2.1 THEN Ratio:=0.1; // Forceratio is already big enough to kill this front
            Ratio:=Ratio*3                  // eliminate this front!
          END
           ELSE Ratio:=Ratio*2;

          // Strengthen only the strongest territory bordering this enemyterritory to prevent
          // useless placement of armies which become useless after conquering the territory.
          IF NOT BeforeFirstAttackTurn THEN
           FOR B:=1 TO TBordersCount(ET) DO
            IF TArmies(TBorder(ET,B))>TArmies(T) THEN Ratio:=0; //bigger army found, reinforcement of this territory not needed
        END;  //IF TFrontsCount(T)=1

        //too much borders makes TPressure shoot high
        IF TFrontsCount(T)>2 THEN Ratio:=Ratio/(TFrontsCount(T)/2);

        //Defend Territories bordering owned continent
        FOR B:=1 TO TBordersCount(T) DO
         IF COwner(TContinent(TBorder(T,B)))=PMe THEN Ratio:=Ratio*1.5;

        // IF continent is at least half mine, multiply the ratio by the 4 * CRatio owned/total territories on continent
        CAnalysis(TContinent(T),PT,PA,ET,EA);
        CRatio := PT/(PT+ET);
        IF CRatio > 0.5 THEN Ratio := Ratio* 4*CRatio;
        IF Ratio>MaxRatio THEN
        BEGIN
          ToTerritory:=T;
          MaxRatio:=Ratio
        END;
      END;  //IF TIsFront
      T:=T-1
    UNTIL T<1
  END;
  IF (PNewArmies(PMe)=1) AND (NOT SConquest) THEN
  BEGIN
    UBufferSet(43,0.66);  //Set MinAttackratio:=0.66 (Attack only if having at least 2 own armies against 3 enemy-armies)
    UBufferSet(44,0);     //Set FromTerritory:=0 (no "do or die" yet!)
    UBufferSet(45,0);     //Set ToTerritory:=0 (no "do or die" yet!)
    FOR T:=1 TO 42 DO UBufferSet(T,0)
  END;
END;  //PROCEDURE Placement



PROCEDURE Attack;
VAR
  T, B, EnemyT, EnemyA : Integer;
  Ratio, MaxRatio, MinAttackRatio: Double;
  SuspendDoOrDie : Boolean;

  //Function returns false if the territory to attack would become a front of me
  FUNCTION EnemyTerritoryIsEnclosed(TT:Integer):Boolean;
  VAR BT, BTF : Integer;
      ETIE : Boolean;
  BEGIN
    ETIE := True;
    FOR BTF := 1 TO TBordersCount(TT) DO
    BEGIN
      BT := TBorder (TT,BTF);
      IF TOwner(BT)<>PMe THEN ETIE:=False;  //Territory would remain a front
    END;
    result:=ETIE
  END; //FUNCTION EnemyTerritoryIsEnclosed


BEGIN  //PROCEDURE Attack

  //Suspend "DoOrDie"
  SuspendDoOrDie := False;
  FromTerritory:=UBufferGet(44);
  ToTerritory:=UBufferGet(45);
  IF TIsMine(ToTerritory) THEN           // "do or die"-attack has been
  BEGIN                                  // successful
    UBufferSet(43,UBufferGet(43)+0.25);  // Raise MinAttackRatio for each successful conquer by 0.25
    SuspendDoOrDie := True
  END;
  IF TArmies(FromTerritory)=1 THEN SuspendDoOrDie := True; //not enough armies to attack
  IF (TArmies(FromTerritory)-1)/TArmies(ToTerritory)<0.4 THEN SuspendDoOrDie:=True;  //lost too many armies already
  IF SuspendDoOrDie THEN
  BEGIN
    ToTerritory:=0;
    FromTerritory:=0;
    UBufferSet(44,0);
    UBufferSet(45,0)
  END; //Suspend "DoOrDie"

  IF (FromTerritory=0) OR (ToTerritory=0) THEN  // "DoOrDie" not active => choose a "DoOrDie"
  BEGIN
    MinAttackRatio:=UBufferGet(43);
    MaxRatio := MinAttackRatio;
    T:=42;
    REPEAT
      IF TIsFront(T) AND (TArmies(T)>1) THEN   // territory is mine, front and attack is possible
      BEGIN
        FOR B:=1 TO TBordersCount(T) DO
        BEGIN
          EnemyT := TBorder(T,B);
          IF NOT TIsMine(EnemyT) THEN
          BEGIN
            Ratio:=(TArmies(T)-2)/TArmies(EnemyT);     // an extra of 1 army needed (the defending one)
            IF EnemyTerritoryIsEnclosed(EnemyT) AND (Ratio>=2*MinAttackRatio/3) THEN Ratio:=Ratio*3;  //Do attack if the enemy territory is completely enclosed and two-thirds of the minimal forceratio is reached
            IF Ratio >= MinAttackRatio THEN            // make sure, the force ratio is above MinAttackRatio
            BEGIN
              IF TFrontsCount(T)=1 THEN Ratio:=Ratio*2;     // prefer attacking of territories which do not increase the number of territories to defend (makes ratio*6 if territory is enclosed, it's a must!)
              IF TContinent(T)=TContinent(EnemyT) THEN Ratio:=Ratio*2; // prefer attacking of territories on same continent
              IF COwner(TContinent(EnemyT))<>0 THEN Ratio:=Ratio*2.1;  // take the army-bonus the enemy gets.
              IF PTerritoriesCount(TOwner(EnemyT))=1 THEN Ratio:=Ratio*2;  // prefer attacking of the last territory the enemy owns (to conquer his cards)
              IF PProgram(TOwner(EnemyT))=PProgram(PMe) THEN Ratio:=Ratio*0.90; // prefer attacking of someone else than a good friend (anyone who has the same program) (but I do still attack them, if not well defended)

              IF Ratio>=MaxRatio THEN                  // if attack is more prefered than last one, do set new attack
              BEGIN
                FromTerritory:=T;
                ToTerritory:=EnemyT;
                MaxRatio:=Ratio;
              END;  //IF Ratio>=MaxRatio
            END;  //IF Ratio>=MinAttackRatio
          END;  //IF NOT TIsMine
        END   //FOR B:=1 TO TBordersCount
      END;  //IF TIsFront
      T:=T-1
    UNTIL T<1;
    UBufferSet(44,FromTerritory);
    UBufferSet(45,ToTerritory)
  END; //IF (FromTerritory=0) OR (ToTerritory=0)
END;  //PROCEDURE Attack



PROCEDURE Occupation;
VAR KeepTogether : Boolean;
BEGIN
  Armies:=0;
  IF TIsFront(FromTerritory) AND TIsFront(ToTerritory) THEN
  BEGIN
    IF TArmies(FromTerritory)>TArmies(ToTerritory) THEN
    BEGIN
      KeepTogether := False;
      IF (TFrontsCount(FromTerritory)=1) AND (TFrontsCount(ToTerritory)=1) THEN
       IF TBorder(FromTerritory,1)=TBorder(ToTerritory,1) THEN
        IF ( (TArmies(FromTerritory)+TArmies(ToTerritory)-2) / TArmies(TBorder(FromTerritory,1)) ) > (UBufferGet(43)+0.25) THEN KeepTogether:=True;
      // both territories have the same front, and the forceratio is big enough -=> move all armies
      IF KeepTogether THEN  Armies:=TArmies(FromTerritory)-1
       ELSE Armies:=(TArmies(FromTerritory)-TArmies(ToTerritory)) div 2
    END;  // IF TArmies(FromT)>...
  END     // IF TIsFront(FromT)...
  ELSE IF TIsFront(ToTerritory) THEN
   Armies:=TArmies(FromTerritory)-1;
END;  //PROCEDURE Occupation




PROCEDURE Fortification;
VAR T, BT, FromT, ToT, BiggestArmy, B, C, MinArmy, MaxArmy  :Integer;
    
 FUNCTION TBordersAnotherContinent (TTBAC:Integer): Boolean;
 VAR BTBAC, CTBAC : Integer;
     TBAC : Boolean;
 BEGIN
   TBAC := False;
   CTBAC:=TContinent(TTBAC);
   FOR BTBAC:=1 TO TBordersCount (TTBAC) DO
    IF TContinent(TBorder(TTBAC,BTBAC)) <> CTBAC THEN
     TBAC:=True;
   result := TBAC
 END;

BEGIN  //PROCEDURE Fortification

//  ULog(PName(PMe),': Fortification routine called!');
  MinArmy:=1500;    //smallest frontarmy must be smaller than this one (should be no problem...)
  Armies:=0;        //Do not move armies until moveable army found
  BiggestArmy:=1;   //Need at least 2 Armies to have one to move [TArmies(FromT) > BiggestArmy]
  ToTerritory:=0;
  FromTerritory:=0;
  FromT:=0;         //From Territory
  T:=42;
  REPEAT
    IF TIsFront(T) AND (TArmies(T)<=MinArmy) THEN  //TIsFront(T) can only be true if TIsMine(T) is True
    BEGIN
      FOR B:=1 TO TBordersCount(T) DO
      BEGIN
        FromT:=TBorder(T,B);
        IF (TIsMine(FromT) AND (NOT TIsFront(FromT))) AND (TArmies(FromT)>BiggestArmy) THEN
        BEGIN
          MinArmy:=TArmies(T);
          FromTerritory:=FromT;
          ToTerritory:=T;
          Armies:=TArmies(FromTerritory)-1;
          BiggestArmy:=Armies
        END;
      END   // FOR B:=1 TO ...
    END;  // FOR TIsFront(T) ...
    T:=T-1
  UNTIL T<1;


  IF Armies = 0 THEN
  BEGIN
    MinArmy:=1500;
    BiggestArmy:=1;
    FromT:=0;
    ToT:=0;
    FOR T:=1 TO 42 DO
    BEGIN
      C:=TContinent(T);
      IF (TBordersAnotherContinent(T) AND (COwner(C)=PMe)) AND TArmies(T)<MinArmy THEN
       FOR B:=1 TO TBordersCount(T) DO
      BEGIN
        BT:=TBorder(T,B);
        IF TIsMine(BT) AND (NOT TIsFront(BT)) THEN
         IF (NOT TBordersAnotherContinent(BT)) AND (TArmies(BT)>Armies+1) THEN
        BEGIN
          FromT:=BT;
          ToT:=T;
          MinArmy := TArmies(T);
          Armies:=TArmies(FromT)-1
        END
      END
    END;
    IF MinArmy <1500 THEN
    BEGIN
      ToTerritory:=ToT;
      Fromterritory:=FromT;
      Armies:=TArmies(FromT)-1
    END
  END;

  IF Armies = 0 THEN   //no fortification found, so move the biggest other army anywhere
  BEGIN
    MaxArmy := 1;
    T:=42;
    REPEAT
      IF (TIsMine(T) AND NOT TIsFront(T)) AND (NOT TBordersAnotherContinent(T)) THEN    // territory is mine and not "front"
      BEGIN
        IF TArmies(T)>MaxArmy THEN
        BEGIN
          MaxArmy := TArmies(T);
          FromTerritory := T
        END;
      END;
      T:=T-1
    UNTIL T<1;
    // if there are armies to move...
    // move armies to a random bordering territory
    IF FromTerritory>0 THEN
    BEGIN
      B:=URandom(TBordersCount(FromTerritory))+1;
      ToTerritory:=TBorder(FromTerritory,B);    // Random movement can be very surprising
      // Move all armies to destination (except the one which must stay)
      Armies:=TArmies(FromTerritory)-1
    END;
  END;  //IF Armies = 0

END;  //PROCEDURE Fortification
