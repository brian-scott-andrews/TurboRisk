 // digger.trp (formerly unsimple.trp)
 // a computer program for the Turborisk game by Mario Ferrari
 // written by Martin Nehrdich
 //
 // 06.03.2000 - 08.04.2000 (during exams, must be the game)
 // continued programming in the period 20.11.2000 - 30.12.2000
 // (renamed to digger on 30.12.2000, digger is my favorite stuffed pet)
 //
 // This program has been programmed before I looked into other programs
 // (except simple.trp), therefor similarities to other programs means
 // a good job of those programmers. ;)
 //  Well, okay, I have peeked into other programs a bit, but I haven't copied any
 // parts of them, because most parts were finished by that time.
 // The only thing is an idea from borg, I prefer attacking of someone else, not
 // 'friends' with the same program. But I do still attack them.
 //
 // Enjoy fighting,
 // and may the Force be with you,
 //    Martin
 // e-mail: Krulle@redseven.de
 //
 //
 // Procedures and comments:
 //
 // ASSIGNMENT:
 // In the first assignment turn, the continential bonusses will be written in the log,
 // as well as the names of territories bordering another continent.
 // If someone (doesn't matter who) has all territories except one on a continent, 
 // I take the last one, either for my own bonus, or to avoid giving him the bonus.
 // I prefer assigning of territories on small continents, especially if I border other
 // owned territories by me.
 // I also prefer territories on empty continents.
 // This routine just took an hour on the 08th april to program.
 // Actually, I prefer random assignment, but I wanted something programmed, not just the
 // last free territory assigned. (Other way round than simple.trp).
 //
 // PLACEMENT: place armies in the territory with worst ratio own forces/enemy forces bordering
 // with special efforts on territories having only one bordering enemy territory (tripled
 // Ratio if enemy territory is enclosed and force ratio <=2.1, if force ratio >2.1 do not place
 // armies here (force should be big enough), doubled ratio if it's just a one-front territory,
 // but only the strongest territory will be reinforced.
 // If at least half the continent is owned, the Ratio is also increased by 4 * ratio
 // owned/total territories on continent. The Ratio is decreased if there are too many fronts
 // (TPressure gets too big with more fronts, but TStrongestFront is not high enough.)
 // The Ratio is also increased by 3/2 if the territory is bordering a continent owned by me
 // (to defend it better).
 // This routine has a big problem: During placement of the armies before the first attack
 // (the turn, where everybody places armies) I leave accidentically some territories undefended.
 // Need to change that. 08/04/2000: Solved. Matter of minutes. (Added BeforeFirstAttackTurn routine)
 //
 // ATTACK: perform attack with best ratio own forces/enemy forces,
 // a first occupation is a must (enemy may outnumber me by 3:2), following attacks only
 // if the ratio is > 1.5 (3 own armies against 2 enemy armies, not counting the army
 // which must stay).
 // IF the army-ratio is greater 2.5, the attack is chosen as a "DoOrDie"-attack, suspended only,
 //  if the forceratio is smaller 0.4.
 //  "DoOrDie" added on 30 december 2000
 // Ratio is tripled if the attacked territory is completely encircled and
 //  the forceratio is reached be two-thirds (the conquered territory would not be front)
 // Ratio is doubled if minimal forceratio is reached and the territory has only
 //  one bordering enemy territory.
 // Ratio is doubled (again) if minimal forceratio is reached and the
 //  attacked territory is on same continent.
 // Ratio is multiplied by 2.1 if minimal forceratio is reached and the territory attacked
 //  is on a continent which is owned completely by someone.
 // Ratio is doubled (again) if minimal forceratio is reached and the
 //  attacked territory is the last one the attacked enemy owns (to conquer his cards).
 // Decrease Ratio by 10% if the attacked territory belongs to another player with the same program.
 //
 // As is clear now, I evaluate a lot within the Placementroutine, which increases my
 // attack possibilities a lot, compared to simple.trp.
 // The combination Place Armies on half/nearly my continent and perform best
 // attack ratio leads to trying to conquer several continents at the same time.
 // Therefore I'm not as focussed as napoleon.trp in conquering a continent.
 // But I do defend other territories according the pressure.
 // One effect of stronger placement on one-front-territories and owned territories
 // as well as preferred attacking from these territories is a strong offence against other
 // continents. (i.e. Alaska will be preffered attacked if Koryat is mine and none of
 // the other Asian territories bordering Koryat is enemy territory). The same effect
 // as struggler.trp, but with less difficult evaluations.
 // During the changes I've made, this effect became weaker (due to other preferations added),
 // but it is still there.
 //
 // OCCUPATION:
 // If both territories are 'front' balance armies, except if both territories border the
 // same enemy territory as only front. In this case all armies will be moved (to increase
 // attackpossibility).
 // If only the conquered is front move all armies
 // else do not move armies.
 //
 // FORTIFICATION: look for weakest front and reinforce it, if not possible,
 // move the biggest army on a non-front-territory to any (random) bordering territory.
 //
 //
 // Basically, the Fortification-Bug was the reason for me to write my own program.
 // At first, I thought it was the programming of simple.trp and the others. But when I did
 // not find any possible problem within the fortification routine of simple.trp, I started
 // to modify simple.trp (-=> unsimple.trp). But the problem stayed. When I added the line
 // ULog('Fortification routine called');
 // and the line did not show up in the log, I knew the bug must be somewhere else.
 // Watching the log, I found out, that if Occupation returned a single time something else
 // than Armies=0, I thought, I could change it within the Occupation routine. Actually, I thought
 // I could program a computerenemy that good, that it would need no occupation. Ha! I was wrong!
 // An Occupationarmy is needed much more than any fortificationarmy.
 // 
 // Regardless the fact, that Mario Ferrari believed that he fixed the bug with version 1.2
 // and the bug still being there, I believe this turborisk to be one of the very best
 // computerversions of this classical strategy game. Especially the fact, that you can program
 // your own enemies. If you want it easy (because you like cheating, or you're just unable to
 // win against the computer, but want to), you can always add a line in the attack routine
 // going something like
 // IF PProgram(ToTerritory)='human' THEN Ratio:=0;
 // or something like that (depends on the program).
 //
 // Bug be thanks, a new program is born.
 //
 //
 //
 // Comments are in the code, if code has been unabled, it is still there
 // (for example the ULog code in the fortification routine) easily recognizable
 // by the commentslashes as the first tho symbols (even before a space)
 //
 // Symbols ULog and UMessage: #9 : Tab;   #10 : New Line
 //
 // Usage of UBuffer:
 //
 // 48: DoOrDie (0..42), FromTerritory (0 for none)
 // 49: DoOrDie (0..42), ToTerritory (0 for none)
 // 50: Killed Hunam and laughed: 0=not yet, 1=done



PROCEDURE Assignment;
VAR
  T, B, BT, C,
  PT, PA,            // Players Territories and Armies
  LP, LT, LA,        // Leader on this continent, his territories and armies
  ET, EA : Integer;  // Enemy Territories and Armies
  Ratio, MaxRatio  : Double;

 FUNCTION TBordersAnotherContinent (TTBAC:Integer): Boolean;
 VAR BTBAC, CTBAC : Integer;
     TBAC : Boolean;
 BEGIN
   TBAC := False;
   CTBAC:=TContinent(TTBAC);
   FOR BTBAC:=1 TO TBordersCount (TTBAC) DO
    IF TContinent(TBorder(TTBAC,BTBAC)) <> CTBAC THEN
     TBAC:=True;
   result := TBAC
 END;

BEGIN
  // If you want to know how big the bonusses are, start the game with assignment
  // of territories in turn (not randomly), keep log of this player switched on
  // and take a look in the log
  IF PTerritoriesCount(PMe) = 0 THEN
  BEGIN
    ULog('What a great game, Yeah!');
    ULog('Message from ', PName(PMe),' Player ID#', PMe, ', program controlled by ', PProgram(PMe),'.');
    ULog(' ');
    ULog('Continential Bonusses and number of territories:');
    FOR C:=1 TO 6 DO
    BEGIN
      ULog('Continent id: ', C,' has ',CTerritoriesCount(C),' territories, which bring together a bonus of ',CBonus(C), ' armies');
      ULog('Territories allowing access to this territory:');
      FOR BT:=1 TO CTerritoriesCount(C) DO
      BEGIN
        T:=CTerritory(C,BT);
        IF TBordersAnotherContinent (T) THEN
         ULog(TName(T));
      END;
      ULog(' ')
    END;
    ULog('Let me kick butt!');
    ULog(' ')
  END;

  ToTerritory:=0;
  MaxRatio:=0;

  // My new one:
  T:=42;
  REPEAT
    IF TOwner(T)=0 THEN
    BEGIN
      C:=TContinent(T);
      CAnalysis(C, PT,PA,ET,EA);
      Ratio:=(PT+1)/(CTerritoriesCount(C)+ET);
      IF ET = 0 THEN Ratio:=Ratio*2;       // IF no enemy on this continent yet, take it.
      FOR B:= 1 TO TBordersCount(T) DO
      BEGIN
        BT:=TBorder(T,B);
        IF TOwner(BT)=PMe THEN Ratio:=Ratio*1.1;  // Having myself as neighbour makes less fronts to defend
        IF COwner(TContinent(BT))=PMe THEN Ratio:=Ratio*1.25
      END;
      CLeader(C, LP,LT,LA);
      IF (LT=CTerritoriesCount(C)-1) AND (LP>0) THEN Ratio:=Ratio*10+10;  // I want THIS territory, either to avoid the enemy getting the bonus, or to make it my bonus
      IF Ratio>MaxRatio THEN
      BEGIN
        ToTerritory:=T;
        MaxRatio:=Ratio
      END;
    END;
    T:=T-1
  UNTIL T<1;
  IF ToTerritory=0 THEN
   UMessage('Player #',PMe,' (',PName(PMe),')',#10,
            'Critical Error!',#10,
            'Procedure Assignment called',#10,
            'but no free territory found')
END; //PROCEDURE Assignment



PROCEDURE Placement;
VAR
  T, B, PT, PA, ET, EA    : Integer;
  Ratio, MaxRatio, CRatio : Double;
  BeforeFirstAttackTurn   : Boolean;

  //Function returns false if the territory to attack would become a front of me
  FUNCTION EnemyTerritoryIsEnclosed(TT:Integer):Boolean;
  VAR BTETIE : Integer;
      ETIE : Boolean;
  BEGIN
    ETIE := TRUE;
    FOR BTETIE := 1 TO TBordersCount(TT) DO
     IF TOwner(TBorder (TT,BTETIE))<>PMe THEN ETIE:=False;  //Territory would remain a border
    result:=ETIE;
  END; //function EnemyTerritoryIsEnclosed(TT:Integer):Boolean;

BEGIN
  // reinforce territory with greatest ratio between total enemy armies and own armies
  // modified by some factors (on same continent, number of fronts, ...)
  ToTerritory:=0;
  MaxRatio:=0;

  BeforeFirstAttackTurn:=False;
  FOR T:=1 TO 10 DO
    IF PActive(T) AND (T<>PMe) AND (PNewArmies(T)>1) THEN BeforeFirstAttackTurn:=True;
  // I need to defend every territory if BFAT is True. Later I only strengthen certain
  // territories to prevent useless placement of armies.

  T:=42;
  REPEAT
    IF TIsFront(T) THEN         // territory is mine and front
    BEGIN
      Ratio := TPressure(T) / TArmies(T);

      //Increase the pressure if there is only one territory attackable (easy defending)
      IF TFrontsCount(T)=1 THEN
      BEGIN
        ET:=TFront(T,1);
        IF EnemyTerritoryIsEnclosed(ET) THEN
        BEGIN
          IF Ratio > 2.1 THEN Ratio:=0.5;  // Forceratio is already big enough to kill this front, prefer other fronts
          Ratio:=Ratio*3                   // eliminate this front!
        END
         ELSE Ratio:=Ratio*2;

        IF NOT BeforeFirstAttackTurn THEN
        // Strengthen only the strongest territory bordering this enemyterritory to prevent
        // useless placement of armies which become useless after conquering the territory.
         FOR B:=1 TO TBordersCount(ET) DO
          IF TArmies(TBorder(ET,B))>TArmies(T) THEN Ratio:=0; //bigger army found, reinforcement of this territory not needed
      END;  //IF TFrontsCount(T)=1
      //too much borders makes TPressure shoot high
      IF TFrontsCount(T)>2 THEN Ratio:=Ratio/(TFrontsCount(T)/2);

      //Defend Territories bordering owned continent
      FOR B:=1 TO TBordersCount(T) DO
      BEGIN
        ET:=TBorder(T,B);
        IF COwner(TContinent(ET))<>0 THEN Ratio:=Ratio*1.5
      END;

      // IF continent is at least half mine, multiply the ratio by the 4 * CRatio owned/total territories on continent
      CAnalysis(TContinent(T),PT,PA,ET,EA);
      CRatio := PT/(PT+ET);
      IF CRatio > 0.5 THEN Ratio := Ratio* 4*CRatio;
      // Has the same effect as the two lines below (half continent => 0.5 * 4 =2; 75% * 4 = 3), 
      // which were my first (and most simple) try to reinforce continents.
//      IF PT / CTerritoriesCount(TContinent(T)) > 0.75 THEN Ratio:=Ratio*3     //Triple the pressure if 75% of the Continent is already mine
//      ELSE IF PT / CTerritoriesCount(TContinent(T)) >0.5 THEN Ratio:=Ratio*2; //Double it, if 50% is mine

      IF Ratio>MaxRatio THEN
      BEGIN
        ToTerritory:=T;
        MaxRatio:=Ratio
      END;
    END;
    T:=T-1
  UNTIL T<1
END;  //PROCEDURE Placement



PROCEDURE Attack;
VAR
  T, B, EnemyT, EnemyA : Integer;
  Ratio, MaxRatio, MinAttackRatio: Double;
  SuspendDoOrDie : Boolean;

  //Function returns false if the territory to attack would become a front of me
  FUNCTION EnemyTerritoryIsEnclosed(TT:Integer):Boolean;
  VAR BT, BTF : Integer;
      ETIE : Boolean;
  BEGIN
    ETIE := True;
    FOR BTF := 1 TO TBordersCount(TT) DO
    BEGIN
      BT := TBorder (TT,BTF);
      IF TOwner(BT)<>PMe THEN ETIE:=False;  //Territory would remain a front
    END;
    result:=ETIE;
  END; //function EnemyTerritoryIsEnclosed

BEGIN

  //Just for fun: disable it if you want to
  IF SConquest AND (UBufferGet(50)<>1) THEN
   FOR T:=1 TO 10 DO  IF ((PProgram(T)='human') AND (PTerritoriesCount(T)=0)) AND PActive(T) THEN
  BEGIN
    UMessage('Dear ',PName(T),'!', #10,
             'You have lost!', #10,
             'And I am still alive!',#10,
             'HaHa!',#10,
             'Greetings from',#10,
              PName(PMe));
    UBufferSet(50,1);
  END; //is done only in the first round a human is destroyed. If multiple humans are destroyed in one turn, I laugh upon all of them

  //Suspend "DoOrDie"
  SuspendDoOrDie := False;
  FromTerritory:=UBufferGet(48);
  ToTerritory:=UBufferGet(49);
  IF TIsMine(ToTerritory) THEN           // "do or die"-attack has been successful
   SuspendDoOrDie := True;
  IF TArmies(FromTerritory)=1 THEN SuspendDoOrDie := True; //not enough armies to attack
  IF (TArmies(FromTerritory)-1)/TArmies(ToTerritory)<0.4 THEN SuspendDoOrDie:=True;  //lost too many armies already
  IF SuspendDoOrDie THEN
  BEGIN
    ToTerritory:=0;
    FromTerritory:=0;
    UBufferSet(48,0);
    UBufferSet(49,0)
  END; //Suspend "DoOrDie"

  IF SConquest THEN            // if have one conquest already
    MinAttackRatio:=1.5        // attack only if enemy is outnumbered 3 to 2 (more aggresive? Lower Ratio (e.g. MaxRatio:=1.3))
  ELSE MinAttackRatio:=0.75;   // else attack if max. outnumbered by 2 to 3 (increase the chance to get a card)
                               // MinAttackRatio is decreased by one-third if the enemy territory is completely enclosed by me
  MaxRatio := MinAttackRatio;

  IF (FromTerritory=0) OR (ToTerritory=0) THEN
  BEGIN
    T:=42;
    REPEAT
      IF TIsFront(T) AND (TArmies(T)>1) THEN   // territory is mine, front and attack is possible
      BEGIN
        FOR B:=1 TO TBordersCount(T) DO
        BEGIN
          EnemyT := TBorder(T,B);
          IF NOT TIsMine(EnemyT) THEN
          BEGIN
            Ratio:=(TArmies(T)-1)/TArmies(EnemyT);     // an extra of 1 army needed (the defending one)
            IF EnemyTerritoryIsEnclosed(EnemyT) AND (Ratio>=2*MinAttackRatio/3) THEN Ratio:=Ratio*3;  //Do attack if the enemy territory is completely enclosed and two-thirds of the minimal forceratio is reached
            IF Ratio >= MinAttackRatio THEN            // make sure, the force ratio is above MinAttackRatio
            BEGIN
              IF TFrontsCount(T)=1 THEN Ratio:=Ratio*2;     // prefer attacking of territories which do not increase the number of territories to defend (makes ratio*6 if territory is enclosed, it's a must!)
              IF TContinent(T)=TContinent(EnemyT) THEN Ratio:=Ratio*2; // prefer attacking of territories on same continent
              IF COwner(TContinent(EnemyT))<>0 THEN Ratio:=Ratio*2.1;  // take the army-bonus the enemy gets.
              IF PTerritoriesCount(TOwner(EnemyT))=1 THEN Ratio:=Ratio*5;  // prefer attacking of the last territory the enemy owns (to conquer his cards)
              IF PProgram(TOwner(EnemyT))=PProgram(PMe) THEN Ratio:=Ratio*0.90; // prefer attacking of someone else than a good friend (anyone who has the same program) (but I do still attack them, if not well defended)

              IF Ratio>=MaxRatio THEN                  // if attack is more prefered than last one, do set new attack
              BEGIN
                FromTerritory:=T;
                ToTerritory:=EnemyT;
                MaxRatio:=Ratio
              END;  //IF Ratio>=MaxRatio
            END;  //IF Ratio>=MinAttackRatio
          END;  //IF NOT TIsMine
        END   //FOR B:=1 TO TBordersCount
      END;  //IF TIsFront
      T:=T-1
    UNTIL T<1;

    // check if good enough as "DoOrDie"
    Ratio:=(TArmies(FromTerritory)-1)/TArmies(ToTerritory);
    IF Ratio>2.5 THEN
    BEGIN
      UBufferSet(48,FromTerritory);
      UBufferSet(49,ToTerritory)
    END;

  END;  //IF (FromTerritory=0) OR (ToTerritory=0)
END;  //PROCEDURE Attack



PROCEDURE Occupation;
BEGIN
  // very simple but effective routine
  // nearly the same as simple.trp (why change it, it works great!)
  // 02/04/2000: Oops. Seems like I've changed quite a few bit. Hmmm...
  // I just needed some change.

  // if both territories are 'front' balance armies, except if both armies border the same
  //  enemy territory as only front. In this case all armies will be moved (to increase attackpossibility).
  // if "To" is front move all armies in the conquered territory except the one which must stay
  // if none of them is front, do not move armies

  Armies:=0;
  IF TIsFront(FromTerritory) AND TIsFront(ToTerritory) THEN
  BEGIN
    IF TArmies(FromTerritory)>TArmies(ToTerritory) THEN
    BEGIN
      IF (TFrontsCount(FromTerritory)=1) AND (TFrontsCount(ToTerritory)=1) THEN
      BEGIN      // It makes a following attack easier if the troops stay together, therefore move all
        IF (TFront(FromTerritory,1)=TFront(ToTerritory,1)) AND ((TArmies(FromTerritory)+2)/(TArmies(TFront(ToTerritory,1)))>1.2) THEN Armies:=TArmies(FromTerritory)-1;
      END
      ELSE
       Armies:=(TArmies(FromTerritory)-TArmies(ToTerritory)) div 2
    END;  //IF TArmies(FromTerritory)>...
  END
  ELSE IF TIsFront(ToTerritory) THEN
   Armies:=TArmies(FromTerritory)-1;

  // Until at least version 1.2 of turborisk fortification will NOT be called if  armies <> 0
  // in any occupation (even if only in the first of 5 occupations additional
  // troopmovement was done)
  // Workaround: armies := 0; has the negative side that no effective occupation will be done.
  // At least on my PC (Win95, no Delphi installed), fortification will not be called
END;  //PROCEDURE Occupation




PROCEDURE Fortification;
VAR T, FromT, BiggestArmy, B, MinArmy, MaxArmy  :Integer;
BEGIN
  //Search weakest front and fortify it with the biggest army 
  //standing on a bordering, non-front territory.
  //If there are several weakest fronts,
  //fortify the one with the biggest fortifying army
  //If it is not possible to fortify a front, search the biggest army on a non-front
  //territory and move it to any other bordering territory

  //Up to at least Version 1.2 it is possible, that the fortification-routine
  //will not be called if there was additional troop-movement after conquering
  //a territory (i.e. Ukraine was conquered from Scandinavia and aditional
  //2 troops were moved to make it 5 defendors, (3 are moved initially (if available))).


//  ULog(PName(PMe),': Fortification routine called!');
  MinArmy:=1500;    //smallest frontarmy must be smaller than this one (should be no problem...)
  Armies:=0;        //Do not move armies until moveable army found
  BiggestArmy:=1;   //Need at least 2 Armies to have one to move [TArmies(FromT) > BiggestArmy]
  ToTerritory:=0;
  FromTerritory:=0;
  FromT:=0; //From Territory
  T:=42;
  REPEAT
    IF TIsFront(T) AND (TArmies(T)<=MinArmy) THEN  //TIsFront(T) can only be true if TIsMine(T) is True
    BEGIN
//      ULog('Evaluating Frontterritory id ',T,': ',TName(T),' Bordering countries:');
      FOR B:=1 TO TBordersCount(T) DO
      BEGIN
        FromT:=TBorder(T,B);
//        IF TIsFront(FromT) THEN ULog(TName(FromT),' is mine and front')
//        ELSE BEGIN                  //not front. TIsFront also turns false if T is not mine
//          IF TIsMine(FromT) THEN ULog(TName(FromT),' is mine and not front! <=-')
//           ELSE ULog(TName(FromT), ' is not mine (Owner: ',PName(TOwner(FromT)),')');
//        END;
        IF (TIsMine(FromT) AND (NOT TIsFront(FromT))) AND (TArmies(FromT)>BiggestArmy) THEN
        BEGIN
          MinArmy:=TArmies(T);
          FromTerritory:=FromT;
          ToTerritory:=T;
          Armies:=TArmies(FromTerritory)-1;
          BiggestArmy:=Armies;
//          ULog('Chosen fortification: ',TName(FromTerritory),' -=> ',TName(ToTerritory),'  ',Armies,'Armies');
        END;
      END;
    END;
    T:=T-1;
  UNTIL T<1;

  IF Armies = 0 THEN   //no fortification of a front possible, move the biggest other army anywhere
  BEGIN
//    ULog('No inforceable front found, trying to move the biggest non-front-army');
    MaxArmy := 1;
    T:=42;
    REPEAT
      IF TIsMine(T) AND NOT TIsFront(T) THEN    // territory is mine and not "front"
      BEGIN
        IF TArmies(T)>MaxArmy THEN
        BEGIN
          MaxArmy := TArmies(T);
          FromTerritory := T;
        END;
      END;
      T:=T-1;
    UNTIL T<1;
    // if there are armies to move...
    // move armies to a random bordering territory
    IF FromTerritory>0 THEN
    BEGIN
//      ULog('The biggest army is in: ',TName(FromTerritory),' and has ',TArmies(FromTerritory),' armies');
      B:=URandom(TBordersCount(FromTerritory))+1;
//      ULog('Trying to move those armies to bordering territory #',B,' (',TName(TBorder(FromTerritory,B)),')');
      ToTerritory:=TBorder(FromTerritory,B);    // Random movement can be very surprising
      // Move all armies to destination (except the one which must stay)
      Armies:=TArmies(FromTerritory)-1;
    END;
  END;  //IF Armies = 0

END;  //PROCEDURE Fortification





 //The bigger Army is the Force!