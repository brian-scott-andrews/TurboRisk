{
Program: Borg

Author: Greg

Description: It cooperates with other players with the same program name.
}

procedure Assignment(var ToTerritory: integer);
var
T,TT,T2,EA,ET,PT,PA,C,MinTer: integer;
begin


ToTerritory:=0;
for T:=1 to 42 do
begin
for T2:=1 to 42 do
begin
TT:=43-T2;
if (TOwner(T)=0)  then
if (TOwner(TT)=PMe) then
if (TContinent(T)=TContinent(TT)) then ToTerritory:=T; 
end;
end;

if ToTerritory=0 then
begin
MinTer:=100;
for T:=1 to 42 do
begin
if (TOwner(T)=0)  then  
begin
C:=TContinent(T);
CAnalysis(C,PT,PA,ET,EA);

if ET<=MinTer then 
begin
MinTer:=ET;
ToTerritory:=T;
end;
end;
end;
end;

end;


procedure Placement(var ToTerritory: integer);
var
  MostArmies,MostIn,PP,TT,AA,PT,PA,ET,EA,T,k,j,m: integer;
  Special,TAHis,AHis,AMine,ThemRat,Ratio,MaxRatio,SumFriends: double;
  EnemyLeft:boolean;
begin
    EnemyLeft:=false;
    for k:=1 to 10 do if (PProgram(k)<>PProgram(PMe)) and (PArmiesCount(k)<>0) then EnemyLeft:=true;
  // reinforce territory with greatest ratio between total enemy armies and
  // own armies and a lof of other things
  ToTerritory:=0;
  MaxRatio:=0;
 While ToTerritory=0 do
 begin
  for T:=1 to 42 do 
  begin
     if TIsFront(T) then 
     begin  // territory is mine and front
      MostArmies:=0;
      MostIn:=0;
      j:=TContinent(T);
      for k:=1 to CTerritoriesCount(j) do
      begin
       m:=CTerritory(j,k);
       If (TOwner(m)=PMe) and (TArmies(m)>MostArmies) then
       begin
        MostArmies:=TArmies(m);
        MostIn:=m;
       end;
      end;
      SumFriends:=0;
      for k:=1 to 42 do
      Special:=1;
      if TIsBordering(T,k) then
      begin
       if (TContinent(k)<>TContinent(T)) then Special:=Special+0.5;
       if (PProgram(TOwner(k))=PProgram(PMe)) and (Towner(k)<>PMe) then
       begin
        SumFriends:=SumFriends+TArmies(k);
       end;
      end;
      if CAnalysis(TContinent(T),PT,PA,ET,EA) then
      begin
       if (PT>=2) then Special:=Special+(PT-1);
       if (CTerritoriesCount(TContinent(T))-PT)=1 then Special:=Special+1;
      end;
      // 
      if CLeader(TContinent(T),PP,TT,AA) then
      If (PProgram(PP)=PProgram(PMe)) and (PP<>PMe) then Special:=Special-2;

      AHis:=0;
      AMine:=PNewArmies(PMe)+PArmiesCount(PMe);
      for k:=1 to TFrontsCount(T) do
      begin
       j:=TFront(T,k);
 TAHis:=double(PNewArmies(TOwner(j)))+double(PArmiesCount(TOwner(j)))+double(PTerritoriesCount(TOwner(j)))/3.0;
       IF (TAHis>AHis) then AHis:=TAHis;
      end; 
      AHis:=AHis;
      ThemRat:=AHis /AMine;
      if (ThemRat<1) then ThemRat:=1;
      If (k=MostIn) then Special:=Special*1.5;
      if not EnemyLeft then SumFriends:=0;
      If Special<0 then Special:=0;
      Ratio := Special+(double(TPressure(T))*ThemRat-(SumFriends)*(ThemRat-0.01)) / double(TArmies(T));
      if Ratio>=MaxRatio then begin
        ToTerritory:=T;
        MaxRatio:=Ratio;
      end;
    end;
  end;
  EnemyLeft:=false;
 end;

  
end;
  

procedure Attack(var FromTerritory, ToTerritory: integer);
var
  T,EnemyT,EnemyA: integer;
  Special,Ratio,MaxRatio: double;
  k,curConsider,Cont,myTot,yrTot:integer;
  YepItsABorder,IsFriend,EnemyLeft:boolean;
  TheOwner,j:integer;
begin
    EnemyLeft:=false;
    for k:=1 to 10 do if (PProgram(k)<>PProgram(PMe)) and (PArmiesCount(k)<>0) then EnemyLeft:=true;
    FromTerritory:=0;
    ToTerritory:=0;
    EnemyT:=0;
    MaxRatio:=1.1;
    for T:=1 to 42 do 
    begin
     if TIsFront(T)                      // territory is mine and front
     and (TArmies(T)>1) then 
     begin       // attack is possible
      for k:=1 to 42 do
      if TIsBordering(T,k) then
      begin
       EnemyA:=-12;
       Special:=0;
       TheOwner:=TOwner(k);
       IsFriend:=(PProgram(TheOwner)=PProgram(PMe)) and (TheOwner<>PMe);
       Cont:=TContinent(k);
       myTot:=0;
       yrTot:=0;
       YepItsABorder:=false;
       for j:=1 to TBordersCount(k) do
       begin
        if (TContinent(TBorder(k,j))<>TContinent(k)) 
        and ((PProgram(TBorder(k,j))<>PProgram(PMe)) or not EnemyLeft)
        then YepItsABorder:=true;
       end;  

       For j:=1 to CTerritoriesCount(Cont) do
       begin
        curConsider:=CTerritory(Cont,j);
        if (TOwner(curConsider)=TheOwner) then yrTot:=yrTot+1;
        if (TOwner(curConsider)=PMe) then myTot:=myTot+1;
       end;
       if (TArmies(k)=1) and (TArmies(T)>5) then IsFriend:=false;
       if (PTerritoriesCount(PMe)>3) then Special:=Special+2;
       if (MyTot>=2) then Special:=Special+(MyTot-1);
       if ((CTerritoriesCount(Cont)-myTot)=1) and (TContinent(k)=Cont) then Special:=Special+4;
       if IsFriend then Special:=Special-2;
       if (PProgram(TOwner(k))<>PProgram(PMe)) and TIsFront(k) then Special:=Special+1;
       if not(IsFriend and EnemyLeft) then      
       begin
	  if ((TArmies(k)<EnemyA)or(EnemyA=-12)) and (TOwner(k)<>PMe) then
        begin
         EnemyT:=k;
         EnemyA:=TArmies(k);
         If YepItsABorder Then Special:=Special-0.2;
         Ratio :=(double(TArmies(T))/double(EnemyA))+Special;
         if (Ratio>MaxRatio) and ((Ratio-Special>0.9) or (URandom(0)>0.9)) then 
         begin
          FromTerritory:=T;
          ToTerritory:=EnemyT;
          MaxRatio:=Ratio;
         end;//if (Ratio)
        end; //if (Less and not mine)
       end;  //if is bordering.
      end;   //for k loop
     end;    //if is front
    end;     //for T loop
  If (MaxRatio<1.1) and ((URandom(0)>0.5) or SConquest) then 
  begin
   ToTerritory:=0;
   FromTerritory:=0;
  end;
end;

procedure Occupation(FromTerritory, ToTerritory: integer; var Armies: integer);
var
  FromIsFront, ToIsFront,FConBor,TConBor: boolean;
  TOwn,j:integer;
begin
  FromIsFront := False;
  ToIsFront := False;
  For j:=1 to TBordersCount(FromTerritory) do
  begin
   TOwn:=TOwner(TBorder(FromTerritory,j));
   If PProgram(TOwn)<>PProgram(PMe) then FromIsFront:=true;
  end; 
  For j:=1 to TBordersCount(ToTerritory) do
  begin
   TOwn:=TOwner(TBorder(ToTerritory,j));
   If PProgram(TOwn)<>PProgram(PMe) then ToIsFront:=true;
  end; 
  Armies:=(TArmies(FromTerritory)-TArmies(ToTerritory)) div 2;
  FConBor:=False;
  TConBor:=False;
  for j:=1 to TBordersCount(FromTerritory) do
  begin
   if (TContinent(TBorder(FromTerritory,j))<>TContinent(FromTerritory)) then FConBor:=true;
  end; 
  for j:=1 to TBordersCount(ToTerritory) do
  begin
   if (TContinent(TBorder(ToTerritory,j))<>TContinent(ToTerritory)) then TConBor:=true;
  end; 
  if ToIsFront and ((not FromIsFront) or (TConBor and not FConBor)) then
  begin
     Armies:=TArmies(FromTerritory)-1;
  end;
end;

procedure Fortification(var FromTerritory, ToTerritory, Armies: integer);
var
  j,TheOwner,T,B,MaxArmy: integer;
  OnlyFriends,EnemyLeft,DohK:boolean;
begin
  FromTerritory:=0;
  ToTerritory:=0;
  Armies:=0;
 begin
    EnemyLeft:=false;
    for j:=1 to 10 do if (PProgram(j)<>PProgram(PMe)) and (PArmiesCount(j)<>0) then EnemyLeft:=true;
  // look for the greatest nuber of armies which is not on a front territory
  MaxArmy := 1;
  for T:=1 to 42 do begin
    OnlyFriends:=true;
    for j:=1 to TBordersCount(T) do
    begin
     TheOwner:=TOwner(TBorder(T,j));
     if (PProgram(TheOwner)<>PProgram(PMe)) then OnlyFriends:=false;
    end;
    if TIsMine(T) and not OnlyFriends then begin  // territory is mine and not "front"  
      if TArmies(T)>MaxArmy then 
      begin
        MaxArmy := TArmies(T);
        FromTerritory := T;
      end;
    end;
  end;
  // if there are armies to move...
  if FromTerritory>0 then begin
    // check if can move armies to front...
    for B:=1 to TBordersCount(FromTerritory) do begin
      if ToTerritory=0 then begin
        T:=TBorder(FromTerritory,B);
        if TIsMine(T) and TIsFront(T) then 
        begin       
         OnlyFriends:=true;
         for j:=1 to TBordersCount(T) do
         begin
          TheOwner:=TOwner(TBorder(T,j));
          if (PProgram(TheOwner)<>PProgram(PMe)) then OnlyFriends:=false;
         end;
         if not EnemyLeft and Not OnlyFriends then begin
           ToTerritory:=T;
         end;
        end;
      end;
    end;
    // otherwise move armies in the first bordering territory
    if ToTerritory=0 then begin
      DohK:=false;
      for B:=1 to TBordersCount(FromTerritory) do begin
          T:=TBorder(FromTerritory,B);
          if (TIsMine(T))  then begin
            ToTerritory:=T;
          end;
        end;
      end;
    end;
    // Move all armies to destination (except the one which must stay)
    if ToTerritory>0 then 
    begin
     Armies:=(TArmies(FromTerritory))-1;
     for j:=1 to 6 do
     begin
      if (TContinent(TBorder(FromTerritory,j))<>TContinent(FromTerritory)) 
      and not(TContinent(TBorder(ToTerritory,j))<>TContinent(ToTerritory)) then
      begin
       Armies:=(TArmies(FromTerritory)) div 2;
       if Armies=0 then
       begin
        ToTerritory:=0;
        FromTerritory:=0;
       end;
      end;
     end;
    end;
  if (ToTerritory=0) or (FromTerritory=0) then
  begin
        ToTerritory:=0;
        FromTerritory:=0;
  end;
  end;
end;

begin
end.
