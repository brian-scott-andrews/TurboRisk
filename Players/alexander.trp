{
Program: Alexander

Author: Alexander Gogava 03.20.99 < alex@argosoft.com >.

Description: A program that tries to assign and attack continents.
Works best against 1 or 2 other computer players.

History: Ported to TurboRisk 1.3 by Nathan Scarbrough.
}
{
Procedures:

ASSIGNMENT: assign continents with minimal enemy terrirories.

PLACEMENT: place armies to the weakest fronts and territories,
bordering continents. 

ATTACK: aggressive: perform all attacks if force ratio>1.

OCCUPATION: If both territories are 'front',balance armies. If FromTerritory is not front, all armies move to ToTerritory.

FORTIFICATION: Find largest group of armies near (1 step) to front and move to front; If impossible - move largest group of armies to nearest largest group of armies.
}

procedure Assignment(var ToTerritory: integer);
var
T,TT,T2,i,j,EA,ET,PT,PA,C,MinTer: integer;
begin

// assign continents with minimal enemy terrirories.

 UBufferSet(49,49);
 UBufferSet(50,50);
ToTerritory:=0;
for T:=1 to 42 do
begin
for T2:=1 to 42 do
begin
TT:=T2;
if (TOwner(T)=0)  then
if (TOwner(TT)=PMe) then
if (TContinent(T)=TContinent(TT)) then ToTerritory:=T; 
end;
end;

if ToTerritory=0 then
begin
MinTer:=100;
for T:=1 to 42 do
begin
if (TOwner(T)=0)  then  
begin
C:=TContinent(T);
CAnalysis(C,PT,PA,ET,EA);
if ET<=MinTer then 
begin
MinTer:=ET;
ToTerritory:=T;
end;
end;
end;
end;

end;


procedure Placement(var ToTerritory: integer);
var
  TT,T,i,j,k,FC,EA,ET,x,CL,LT,LA: integer;
  Ratio,MaxRatio,Coeff: double;
begin

// place armies in the weakest fronts and territories,
// bordering continents. 

  ToTerritory:=0;
  MaxRatio:=0;

// Change direction 
  x:=trunc(UBufferGet(49)); x:=-x; UBufferSet(49,x);

if ToTerritory=0 then
  begin
  MaxRatio:=0;
  for TT:=1 to 42 do
  begin
  if x<0 then T:=TT else T:=43-TT;
  if TIsFront(T) then
    begin  // territory is mine and front
    TWeakestFront(T,ET,EA);
    Ratio := TArmies(T)/EA;
    if Ratio>=1.5 then Ratio:=0;
    if Ratio>MaxRatio then
	begin
        ToTerritory:=T;
        MaxRatio:=Ratio;
        end;
    end;
end;
end;

if ToTerritory=0 then
begin
MaxRatio:=0;
for TT:=1 to 42 do
  begin
  if x<0 then T:=TT else T:=43-TT;
  if TIsFront(T) then 
     for i:=1 to TBordersCount(T) do
     if ((TContinent(TBorder(T,i))<>TContinent(T)) and                     (TOwner(TBorder(T,i))<>PMe))then 
     begin 
     Ratio:=TArmies(T)/TArmies(TBorder(T,i));
     if Ratio>=2.0 then Ratio:=0;
     if Ratio>MaxRatio then 
       begin
       MaxRatio:=Ratio;
       ToTerritory:=T;
       end;
       end;
  end;
end;

if ToTerritory=0 then
begin
 MaxRatio:=0; 
  for TT:=1 to 42 do 
  begin
  if x<0 then T:=TT else T:=43-TT;
    if TIsFront(T) then begin 
      TStrongestFront(T,ET,EA);
      Ratio := EA/TArmies(T);
      if Ratio>MaxRatio then begin
        ToTerritory:=T;
        MaxRatio:=Ratio;
      end;
    end;
  end;
end;

end;


procedure Attack(var FromTerritory, ToTerritory: integer);
var
  T,TT,ET,EA,i,j,BC,FR1,FR2, y: integer;
  Leadter,Lead,WeakTer,Weak:Integer;
  MaxRatio,Ratio: Double;
begin

// aggressive: perform all attacks if force ratio>1

FromTerritory:=0;
ToTerritory:=0;

// Change direction 
y:=trunc(UBufferGet(50)); y:=-y; UBufferSet(50,y);
  begin
  MaxRatio:=0;
  for TT:=1 to 42 do
    begin
    if y<0 then T:=TT else T:=43-TT;
    if TIsFront(T)                      // territory is mine and front
    and (TArmies(T)>1) then
    begin                               // attack is possible
    TWeakestFront(T,ET,EA);
    Ratio := TArmies(T)/EA;
    if Ratio>1.0 then if (Ratio>MaxRatio) then 
              begin
              FromTerritory:=T;
              ToTerritory:=ET;
              MaxRatio:=Ratio;
              end;
      end;
    end;
  end;
end;

procedure Occupation(FromTerritory, ToTerritory: integer; var Armies: integer);
begin

// If both territories are 'front', balance armies: 2/3 . 
// If FromTerritory is 
// not front, all armies move to ToTerritory.

  Armies:=0;
 // if both territories are 'front'
  if  TIsFront(FromTerritory) and TIsFront(ToTerritory) then
 // balance armies
   Armies:=2*(TArmies(FromTerritory)-TArmies(ToTerritory)) div 3
 //  else if 'From' is not 'front':
   else 
if  TIsFront(FromTerritory)=false then
    Armies:=TArmies(FromTerritory)-1;
end;

procedure Fortification(var FromTerritory, ToTerritory, Armies: integer);
var
  i,T,TT,B,MaxArmy,XArmy: integer;
begin

// Find largest group of armies and move to front;
// If impossible - find next; 
// If impossible - move largest group of armies 
// to nearest largest group of armies.

FromTerritory:=0; ToTerritory:=0; Armies:=0; XArmy:=10000;
for i:=1 to 42 do
if ToTerritory=0 then
begin
  MaxArmy := 1;
  for T:=1 to 42 do begin
    if TIsMine(T) and not TIsFront(T) then begin
// territory is mine and not "front"
      if (TArmies(T)>MaxArmy)and(TArmies(T)<XArmy) then begin
        MaxArmy := TArmies(T);
        FromTerritory := T;
      end;
    end;
  end;
if FromTerritory>0 then begin
    // check if can move armies to front...
    for B:=1 to TBordersCount(FromTerritory) do begin
      if ToTerritory=0 then begin
        TT:=TBorder(FromTerritory,B);
        if TIsMine(TT) and TIsFront(TT) then begin
          ToTerritory:=TT;
        end;
      end;
    end;
if ToTerritory=0 then XArmy:=MaxArmy;
end;
// otherwise move armies in the bordering territory with maximum armies
if FromTerritory>0 then if ToTerritory=0 then 
begin
MaxArmy:=0;
for B:=1 to TBordersCount(FromTerritory) do 
   begin
   T:=TBorder(FromTerritory,B);
   if TIsMine(T) then if TArmies(T)>MaxArmy then
	begin
        ToTerritory:=T;
	MaxArmy:=TArmies(T);
	end;
    end;
end;
    // Move all armies to destination (except the one which must stay)
    if ToTerritory>0 then begin
    Armies:=TArmies(FromTerritory)-1;
    end;
  end;
end;

begin
end.