 // Hunter.trp  - a computer program for the Turborisk game by Mario Ferrari
 // written by Martin Nehrdich
 //
 //
 // This program is another spinoff of digger.trp.
 // As with the other spinoffs, it's purpose is mainly a study of
 // "see if I can do it".
 // The purpose of this one is: Choose an opponent to destroy
 // and do whatever is neccessary to destroy him. This program
 // feels winner, if he is successful. (The purpose is to fight
 // as if having the secret mission card "destroy player
 // red/green/blue/whatever")
 //
 //
 // Enjoy fighting,
 // and may the Force be with you,
 //    Martin
 // e-mail: Krulle@redseven.de
 //
 //
 //
 // Usage of UBuffer:
 // 01: The ID of the player chosen as prey.
 // 02: Already declared myself as winner (0:not yet, 1: already done)
 //
 // Symbols ULog and UMessage: #9 : Tab;   #10 : New Line



PROCEDURE Assignment;
VAR
  T, B, BT, C,
  PT, PA,            // Players Territories and Armies
  LP, LT, LA,        // Leader on this continent, his territories and armies
  ET, EA : Integer;  // Enemy Territories and Armies
  Ratio, MaxRatio  : Double;

 FUNCTION TBordersAnotherContinent (TTBAC:Integer): Boolean;
 VAR BTBAC, CTBAC : Integer;
     TBAC : Boolean;
 BEGIN
   TBAC := False;
   CTBAC:=TContinent(TTBAC);
   FOR BTBAC:=1 TO TBordersCount (TTBAC) DO
    IF TContinent(TBorder(TTBAC,BTBAC)) <> CTBAC THEN
     TBAC:=True;
   result := TBAC
 END;

BEGIN
  IF (UBufferGet(1)=0) THEN
  BEGIN
    BT := 0;
    FOR T:=1 TO 10 DO  IF PActive(T) AND (PMe <> T) THEN BT:=BT+1;
    C:=URandom(BT)+1;
    FOR T:=1 TO 10 DO
    BEGIN
      IF PActive(T) AND (PMe <> T) THEN C:=C-1;
      IF (C=0) AND (UBufferGet(1)=0) THEN UBufferSet(1,T)
    END;
    ULog(PName(PMe),' here. Chosen prey: ',PName(UBufferGet(1)));
    UBufferSet(2,0)
  END;

  ToTerritory:=0;
  MaxRatio:=0;

  T:=42;
  REPEAT
    IF TOwner(T)=0 THEN
    BEGIN
      C:=TContinent(T);
      CAnalysis(C, PT,PA,ET,EA);
      Ratio:=(PT+1)/(CTerritoriesCount(C)+ET);
      IF ET = 0 THEN Ratio:=Ratio*2;       // IF no enemy on this continent yet, take it.
      FOR B:= 1 TO TBordersCount(T) DO
      BEGIN
        BT:=TBorder(T,B);
        IF TOwner(BT)=UBufferGet(1) THEN Ratio:=Ratio*1.2; //Keep the prey near for better attackpossibilities
        IF TOwner(BT)=PMe THEN Ratio:=Ratio*1.3;           //Having myself as neighbour makes less fronts to defend
        IF COwner(TContinent(BT))=PMe THEN Ratio:=Ratio*1.25
      END;
      CLeader(C, LP,LT,LA);
      IF (LT=CTerritoriesCount(C)-1) AND (LP>0) THEN Ratio:=Ratio*10+10;  // I want THIS territory, either to avoid the enemy getting the bonus, or to make it my bonus
      IF Ratio>MaxRatio THEN
      BEGIN
        ToTerritory:=T;
        MaxRatio:=Ratio
      END;
    END;
    T:=T-1
  UNTIL T<1;
  IF ToTerritory=0 THEN
   UMessage('Player #',PMe,' (',PName(PMe),')',#10,
            'Critical Error!',#10,
            'Procedure Assignment called',#10,
            'but no free territory found')
END; //PROCEDURE Assignment



PROCEDURE Placement;
VAR
  T, B, PT, PA, ET, EA    : Integer;
  Ratio, MaxRatio, CRatio : Double;
  BeforeFirstAttackTurn   : Boolean;

  //Function returns false if the territory to attack would become a front of me
  FUNCTION EnemyTerritoryIsEnclosed(TT:Integer):Boolean;
  VAR BTETIE : Integer;
      ETIE : Boolean;
  BEGIN
    ETIE := TRUE;
    FOR BTETIE := 1 TO TBordersCount(TT) DO
     IF TOwner(TBorder (TT,BTETIE))<>PMe THEN ETIE:=False;  //Territory would remain a border
    result:=ETIE;
  END; //function EnemyTerritoryIsEnclosed(TT:Integer):Boolean;

BEGIN
  // reinforce territory with greatest ratio between total enemy armies and own armies
  // modified by some factors (on same continent, number of fronts, ...)
  ToTerritory:=0;
  MaxRatio:=0;

  BeforeFirstAttackTurn:=False;
  FOR T:=1 TO 10 DO
    IF PActive(T) AND (T<>PMe) AND (PNewArmies(T)>1) THEN BeforeFirstAttackTurn:=True;
  // I need to defend every territory if BFAT is True. Later I only strengthen certain
  // territories to prevent useless placement of armies.
  IF (UBufferGet(1)=0) AND BeforeFirstAttackTurn THEN
  BEGIN
    PT := 0;
    FOR T:=1 TO 10 DO  IF PActive(T) AND (PMe <> T) THEN PT:=PT+1;
    B:=URandom(PT)+1;
    FOR T:=1 TO 10 DO
    BEGIN
      IF PActive(T) AND (PMe <> T) THEN B:=B-1;
      IF (B=0) AND (UBufferGet(1)=0) THEN UBufferSet(1,T)
    END;
    ULog(PName(PMe),' here. Chosen prey: ',PName(UBufferGet(1)));
    UBufferSet(2,0)
  END;

  T:=42;
  REPEAT
    IF TIsFront(T) THEN         // territory is mine and front
    BEGIN
      Ratio := TPressure(T) / TArmies(T);

      //Increase the pressure if there is only one territory attackable (easy defending)
      IF TFrontsCount(T)=1 THEN
      BEGIN
        ET:=TFront(T,1);
        IF EnemyTerritoryIsEnclosed(ET) THEN
        BEGIN
          IF TOwner(ET)=UBufferGet(1) THEN
          BEGIN
            IF Ratio > 2.9 THEN Ratio:=0.7;
          END
          ELSE
           IF Ratio > 2.1 THEN Ratio:=0.5; // Forceratio is already big enough to kill this front, prefer other fronts
          Ratio:=Ratio*3                   // eliminate this front!
        END
         ELSE Ratio:=Ratio*2;

        IF NOT BeforeFirstAttackTurn THEN
        // Strengthen only the strongest territory bordering this enemyterritory to prevent
        // useless placement of armies which become useless after conquering the territory.
         FOR B:=1 TO TBordersCount(ET) DO
          IF TArmies(TBorder(ET,B))>TArmies(T) THEN Ratio:=0.1; //bigger army found, reinforcement of this territory not needed
      END;  //IF TFrontsCount(T)=1
      //too much borders makes TPressure shoot high
      IF TFrontsCount(T)>2 THEN Ratio:=Ratio/(TFrontsCount(T)/2);

      //Defend Territories bordering owned continent
      FOR B:=1 TO TBordersCount(T) DO
      BEGIN
        ET:=TBorder(T,B);
        IF TOwner(ET)=UBufferGet(1) THEN Ratio:=Ratio*1.25;
        IF COwner(TContinent(ET))<>0 THEN Ratio:=Ratio*1.5;
        IF COwner(TContinent(ET))=UBufferGet(1) THEN Ratio:=Ratio*2
      END;

      // IF continent is at least half mine, multiply the ratio by the 4 * CRatio owned/total territories on continent
      CAnalysis(TContinent(T),PT,PA,ET,EA);
      CRatio := PT/(PT+ET);
      IF CRatio > 0.5 THEN Ratio := Ratio* 4*CRatio;

      IF Ratio>MaxRatio THEN
      BEGIN
        ToTerritory:=T;
        MaxRatio:=Ratio
      END;
    END;
    T:=T-1
  UNTIL T<1
END;  //PROCEDURE Placement



PROCEDURE Attack;
VAR
  T, B, EnemyT, EnemyA : Integer;
  Ratio, MaxRatio, MinAttackRatio: Double;

  //Function returns false if the territory to attack would become a front of me
  FUNCTION EnemyTerritoryIsEnclosed(TT:Integer):Boolean;
  VAR BT, BTF : Integer;
      ETIE : Boolean;
  BEGIN
    ETIE := True;
    FOR BTF := 1 TO TBordersCount(TT) DO
    BEGIN
      BT := TBorder (TT,BTF);
      IF TOwner(BT)<>PMe THEN ETIE:=False;  //Territory would remain a front
    END;
    result:=ETIE;
  END; //function EnemyTerritoryIsEnclosed

  FUNCTION IWon(Dummy:Integer):Boolean;
  BEGIN
    IF PTerritoriesCount(UBufferGet(1))<>0 THEN result:=false
    ELSE BEGIN
      IF UBufferGet(2)=0 THEN result:=true
      ELSE result:=false;
    END;
  END;

BEGIN
  IF IWon(1) THEN
  BEGIN
    IF SConquest THEN       // Apparently I destroyed my prey
     UMessage(PName(PMe),' here:',#10,
              'I hereby declare myself as winner',#10,
              'because my ''prey'' (', PName(UBufferGet(1)),') has',#10,
              'been hunted and just killed by myself.',#10,
              'Thank you for this match!')
    ELSE                    // someone else destroyed my prey
     UMessage(PName(PMe),' here:',#10,
              'I hereby declare myself as winner',#10,
              'because my ''prey'' (', PName(UBufferGet(1)),') has',#10,
              'been destroyed and I am still alive!',#10,
              'Thank you all for all your help!');
    UMessage('If you wish, the game can continue,',#10,
             'to see who can conquer the world.');
    UBufferSet(2,1)
  END;

  FromTerritory:=0;
  ToTerritory:=0;
  IF SConquest THEN            // if have one conquest already
    MinAttackRatio:=1.5        // attack only if enemy is outnumbered 3 to 2 (more aggresive? Lower Ratio (e.g. MaxRatio:=1.3))
  ELSE MinAttackRatio:=0.75;   // else attack if max. outnumbered by 2 to 3 (increase the chance to get a card)
                               // MinAttackRatio is decreased by one-third if the enemy territory is completely enclosed by me
  MaxRatio := MinAttackRatio;
  T:=42;
  REPEAT
    IF TIsFront(T) AND (TArmies(T)>1) THEN   // territory is mine, front and attack is possible
    BEGIN
      FOR B:=1 TO TBordersCount(T) DO
      BEGIN
        EnemyT := TBorder(T,B);
        IF NOT TIsMine(EnemyT) THEN
        BEGIN
          Ratio:=(TArmies(T)-1)/TArmies(EnemyT);     // an extra of 1 army needed (the defending one)
          IF EnemyTerritoryIsEnclosed(EnemyT) AND (Ratio>=2*MinAttackRatio/3) THEN Ratio:=Ratio*3;  //Do attack if the enemy territory is completely enclosed and two-thirds of the minimal forceratio is reached
          IF TOwner(EnemyT)=UBufferGet(1) THEN Ratio:=Ratio*1.25; // be extra aggresive against the prey.
          IF Ratio >= MinAttackRatio THEN            // make sure, the force ratio is above MinAttackRatio
          BEGIN
            IF TFrontsCount(T)=1 THEN Ratio:=Ratio*2;     // prefer attacking of territories which do not increase the number of territories to defend (makes ratio*6 if territory is enclosed, it's a must!)
            IF TContinent(T)=TContinent(EnemyT) THEN Ratio:=Ratio*2; // prefer attacking of territories on same continent
            IF COwner(TContinent(EnemyT))<>0 THEN Ratio:=Ratio*2.1;  // take the army-bonus the enemy gets.
            IF COwner(TContinent(EnemyT))=UBufferGet(1) THEN Ratio:=Ratio*2; //especially if it's the prey!
            IF PTerritoriesCount(TOwner(EnemyT))=1 THEN Ratio:=Ratio*5;  // prefer attacking of the last territory the enemy owns (to conquer his cards)
            IF PProgram(TOwner(EnemyT))=PProgram(PMe) THEN Ratio:=Ratio*0.90; // prefer attacking of someone else than a good friend (anyone who has the same program) (but I do still attack them, if not well defended)

            IF Ratio>=MaxRatio THEN                  // if attack is more prefered than last one, do set new attack
            BEGIN
              FromTerritory:=T;
              ToTerritory:=EnemyT;
              MaxRatio:=Ratio 
            END;  //IF Ratio>=MaxRatio
          END;  //IF Ratio>=MinAttackRatio
        END;  //IF NOT TIsMine
      END   //FOR B:=1 TO TBordersCount
    END;  //IF TIsFront
    T:=T-1 
  UNTIL T<1 
END;  //PROCEDURE Attack



PROCEDURE Occupation;
VAR ARatio : Double;
BEGIN
  // if both territories are 'front' balance armies, except if both armies border the same
  //  enemy territory as only front. In this case all armies will be moved (to increase attackpossibility).
  // if "To" is front move all armies in the conquered territory except the one which must stay
  // if none of them is front, do not move armies

  Armies:=0;
  IF TIsFront(FromTerritory) AND TIsFront(ToTerritory) THEN
  BEGIN
    IF TArmies(FromTerritory)>TArmies(ToTerritory) THEN
    BEGIN
      IF (TFrontsCount(FromTerritory)=1) AND (TFrontsCount(ToTerritory)=1) THEN
      BEGIN
        IF (TFront(FromTerritory,1)=TFront(ToTerritory,1)) THEN
        BEGIN                             // It makes a following attack easier if the troops stay together, therefore move all
         IF ((TArmies(FromTerritory)+1)/(TArmies(TFront(ToTerritory,1)))>1.2) THEN  //except IF not strong enough to perform attack afterwards
         Armies:=TArmies(FromTerritory)-1;                                          //TArmies(FromTerritory)+1 = Maximum number of available armies for attack (ToTerritory has 3 Armies, and a total of 2 must stay, 1 in FromT, 1 in ToT)
        END  //TFront(FromT)=TFront(ToT)
        ELSE
        BEGIN
          ARatio:=TArmies(TFront(FromTerritory,1))/TArmies(TFront(ToTerritory,1));
          IF TOwner(TFront(FromTerritory,1))=UBufferGet(1) THEN ARatio:=ARatio*1.1;
          IF TOwner(TFront(ToTerritory,1))=UBufferGet(1) THEN ARatio:=ARatio/1.1;
          Armies:=(TArmies(FromTerritory)-TArmies(ToTerritory)) div ARatio
        END  //TFront(FromT)<>TFront(ToT)
      END  //TFrontsCount=1
      ELSE Armies:=(TArmies(FromTerritory)-TArmies(ToTerritory)) div 2
    END;  // IF Armies(FromT)>Armies(ToT)
  END  // IF both are front
  ELSE IF TIsFront(ToTerritory) THEN
   Armies:=TArmies(FromTerritory)-1;
END;  //PROCEDURE Occupation




PROCEDURE Fortification;
VAR T, FromT, BiggestArmy, B, MinArmy, MaxArmy  :Integer;
BEGIN
  //Search weakest front and fortify it with the biggest army 
  //standing on a bordering, non-front territory.
  //If there are several weakest fronts,
  //fortify the one with the biggest fortifying army
  //If it is not possible to fortify a front, search the biggest army on a non-front
  //territory and move it to any other bordering territory

  MinArmy:=1500;    //smallest frontarmy must be smaller than this one (should be no problem...)
  Armies:=0;        //Do not move armies until moveable army found
  BiggestArmy:=1;   //Need at least 2 Armies to have one to move [TArmies(FromT) > BiggestArmy]
  ToTerritory:=0;
  FromTerritory:=0;
  FromT:=0; //From Territory
  T:=42;
  REPEAT
    IF TIsFront(T) AND (TArmies(T)<=MinArmy) THEN  //TIsFront(T) can only be true if TIsMine(T) is True
    BEGIN
      FOR B:=1 TO TBordersCount(T) DO
      BEGIN
        FromT:=TBorder(T,B);
        IF (TIsMine(FromT) AND (NOT TIsFront(FromT))) AND (TArmies(FromT)>BiggestArmy) THEN
        BEGIN
          MinArmy:=TArmies(T);
          FromTerritory:=FromT;
          ToTerritory:=T;
          Armies:=TArmies(FromTerritory)-1;
          BiggestArmy:=Armies
        END;
      END
    END;
    T:=T-1
  UNTIL T<1;

  IF Armies = 0 THEN   //no fortification of a front possible, move the biggest other army anywhere
  BEGIN
    MaxArmy := 1;
    T:=42;
    REPEAT
      IF TIsMine(T) AND NOT TIsFront(T) THEN    // territory is mine and not "front"
      BEGIN
        IF TArmies(T)>MaxArmy THEN
        BEGIN
          MaxArmy := TArmies(T);
          FromTerritory := T
        END;
      END;
      T:=T-1
    UNTIL T<1;
    // if there are armies to move...
    // move armies to a random bordering territory
    IF FromTerritory>0 THEN
    BEGIN
      B:=URandom(TBordersCount(FromTerritory))+1;
      ToTerritory:=TBorder(FromTerritory,B);    // Random movement can be very surprising
      // Move all armies to destination (except the one which must stay)
      Armies:=TArmies(FromTerritory)-1
    END;
  END;  //IF Armies = 0

END;  //PROCEDURE Fortification
