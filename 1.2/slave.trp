 // slave.trp (formerly unsimple.trp)
 // a computer program for the Turborisk game by Mario Ferrari
 // written by Martin Nehrdich
 //
 // This program is another spinoff of digger.trp.
 // As with the other spinoffs, it's purpose is mainly a study of
 // "see if I can do it".
 // The purpose of this one is: Choose an opponent to serve as slave.
 // The chosen master will never be attacked, territories bordering
 // masters territories will only be weakly defended, masters enemies
 // will be attacked. This program can't be good in winning, but
 // it's just a "see if I can do it".
 // IF the master is destroyed, this program fights just
 // like Digger.trp
 //
 // Enjoy fighting,
 // and may the Force be with you,
 //    Martin
 // e-mail: Krulle@redseven.de
 //
 //
 // Procedures and comments:
 //
 // ASSIGNMENT:
 // If someone (doesn't matter who,except the master) has all territories except one on
 // a continent, I take the last one, either for my own bonus, or to avoid giving him the
 // bonus.
 // I prefer assigning of territories on small continents, especially if I border other
 // owned territories by me.
 // I also prefer territories on empty continents.
 //
 // PLACEMENT: place armies in the territory with worst ratio own forces/enemy forces bordering
 // with special efforts on territories having only one bordering enemy territory (tripled
 // Ratio if enemy territory is enclosed and force ratio <=2.1, if force ratio >2.1 do not place
 // armies here (force should be big enough), doubled ratio if it's just a one-front territory,
 // but only the strongest territory will be reinforced.
 // If at least half the continent is owned, the Ratio is also increased by 4 * ratio
 // owned/total territories on continent. The Ratio is decreased if there are too many fronts
 // (TPressure gets too big with more fronts, but TStrongestFront is not high enough.)
 // The Ratio is also increased by 3/2 if the territory is bordering a continent owned by me
 // (to defend it better).
 // Territories bordering only masters and own territories get the ratio 0.1.
 //
 // ATTACK: perform attack with best ratio own forces/enemy forces,
 // a first occupation is a must (enemy may outnumber me by 3:2), following attacks only
 // if the ratio is > 1.5 (3 own armies against 2 enemy armies, not counting the army
 // which must stay).
 // IF the army-ratio is greater 2.5, the attack is chosen as a "DoOrDie"-attack, suspended only,
 //  if the forceratio is smaller 0.4.
 //  "DoOrDie" added on 30 december 2000
 // Ratio is tripled if the attacked territory is completely encircled and
 //  the forceratio is reached be two-thirds (the conquered territory would not be front)
 // Ratio is doubled if minimal forceratio is reached and the territory has only
 //  one bordering enemy territory.
 // Ratio is doubled (again) if minimal forceratio is reached and the
 //  attacked territory is on same continent.
 // Ratio is multiplied by 2.1 if minimal forceratio is reached and the territory attacked
 //  is on a continent which is owned completely by someone.
 // Ratio is doubled (again) if minimal forceratio is reached and the
 //  attacked territory is the last one the attacked enemy owns (to conquer his cards).
 // Decrease Ratio by 10% if the attacked territory belongs to another player with the same program.
 //
 //
 // OCCUPATION:
 // If both territories are 'front' balance armies, except if both territories border the
 // same enemy territory as only front. In this case all armies will be moved (to increase
 // attackpossibility).
 // If only the conquered is front move all armies
 // else do not move armies.
 //
 // FORTIFICATION: look for weakest front and reinforce it, if not possible,
 // move the biggest army on a non-front-territory to any (random) bordering territory.
 //
 //
 // Symbols ULog and UMessage: #9 : Tab;   #10 : New Line
 //
 // Usage of UBuffer:
 //
 // 48: DoOrDie (0..42), FromTerritory (0 for none)
 // 49: DoOrDie (0..42), ToTerritory (0 for none)
 // 50: MasterID (1..10), the players ID of the chosen master



PROCEDURE Assignment;
VAR
  T, B, BT, C,
  PT, PA,            // Players Territories and Armies
  LP, LT, LA,        // Leader on this continent, his territories and armies
  ET, EA : Integer;  // Enemy Territories and Armies
  Ratio, MaxRatio  : Double;

 FUNCTION TBordersAnotherContinent (TTBAC:Integer): Boolean;
 VAR BTBAC, CTBAC : Integer;
     TBAC : Boolean;
 BEGIN
   TBAC := False;
   CTBAC:=TContinent(TTBAC);
   FOR BTBAC:=1 TO TBordersCount (TTBAC) DO
    IF TContinent(TBorder(TTBAC,BTBAC)) <> CTBAC THEN
     TBAC:=True;
   result := TBAC
 END;

BEGIN
  //choosing master
  IF (UBufferGet(50)=0) THEN
  BEGIN
    BT := 0;
    FOR T:=1 TO 10 DO  IF PActive(T) AND (PMe <> T) THEN BT:=BT+1;
    C:=URandom(BT)+1;
    FOR T:=1 TO 10 DO
    BEGIN
      IF PActive(T) AND (PMe <> T) THEN C:=C-1;
      IF (C=0) AND (UBufferGet(50)=0) THEN UBufferSet(50,T)
    END;
    ULog(PName(PMe),' here. Chosen master: ',PName(UBufferGet(50)))
  END; //choosing Master


  ToTerritory:=0;
  MaxRatio:=0;

  T:=42;
  REPEAT
    IF TOwner(T)=0 THEN
    BEGIN
      C:=TContinent(T);
      CAnalysis(C, PT,PA,ET,EA);
      Ratio:=(PT+1)/(CTerritoriesCount(C)+ET);
      IF ET = 0 THEN Ratio:=Ratio*2;       // IF no enemy on this continent yet, take it.
      FOR B:= 1 TO TBordersCount(T) DO
      BEGIN
        BT:=TBorder(T,B);
        IF TOwner(BT)=PMe THEN Ratio:=Ratio*1.1;  // Having myself as neighbour makes less fronts to defend
        IF TOwner(BT)=UBufferGet(50) THEN Ratio:=Ratio*1.05;
        IF COwner(TContinent(BT))=UBufferGet(50) THEN Ratio:=Ratio*1.2;
        IF COwner(TContinent(BT))=PMe THEN Ratio:=Ratio*1.25
      END;
      CLeader(C, LP,LT,LA);
      IF (LT=CTerritoriesCount(C)-1) AND (LP>0) THEN
      BEGIN
        IF LP=UBufferGet(50) THEN Ratio:=0.1
        ELSE Ratio:=Ratio*10+10;  // I want THIS territory, either to avoid the enemy getting the bonus, or to make it my bonus
      END;
      IF Ratio>MaxRatio THEN
      BEGIN
        ToTerritory:=T;
        MaxRatio:=Ratio
      END;
    END;
    T:=T-1
  UNTIL T<1;
  IF ToTerritory=0 THEN
   UMessage('Player #',PMe,' (',PName(PMe),')',#10,
            'Critical Error!',#10,
            'Procedure Assignment called',#10,
            'but no free territory found')
END; //PROCEDURE Assignment



PROCEDURE Placement;
VAR
  T, B, PT, PA, ET, EA    : Integer;
  Ratio, MaxRatio, CRatio : Double;
  BeforeFirstAttackTurn   : Boolean;

  //Function returns false if the territory to attack would become a front of me
  FUNCTION EnemyTerritoryIsEnclosed(TT:Integer):Boolean;
  VAR BTETIE : Integer;
      ETIE : Boolean;
  BEGIN
    ETIE := TRUE;
    FOR BTETIE := 1 TO TBordersCount(TT) DO
     IF TOwner(TBorder (TT,BTETIE))<>PMe THEN ETIE:=False;  //Territory would remain a border
    result:=ETIE;
  END; //function EnemyTerritoryIsEnclosed(TT:Integer):Boolean;

  FUNCTION TerritoryEnclosedByMyMaster(TT:Integer):Boolean;
  VAR CTEBMM, BTEBMM : Integer;
      TEBMM : Boolean;
  BEGIN
    TEBMM := true;
    FOR BTEBMM:=1 TO TBordersCount(TT) DO
    BEGIN
      IF (TOwner(TBorder(TT,BTEBMM))<>UBufferGet(50)) AND (TOwner(TBorder(TT,BTEBMM))<>PMe) THEN TEBMM:=false;
    END;
    result:=TEBMM
  END; //function TerritoryEnclosedByMyMaster(TT:Integer):Boolean;


BEGIN
  // reinforce territory with greatest ratio between total enemy armies and own armies
  // modified by some factors (on same continent, number of fronts, ...)
  ToTerritory:=0;
  MaxRatio:=0;

  BeforeFirstAttackTurn:=False;
  FOR T:=1 TO 10 DO
    IF PActive(T) AND (T<>PMe) AND (PNewArmies(T)>1) THEN BeforeFirstAttackTurn:=True;
  // I need to defend every territory if BFAT is True. Later I only strengthen certain
  // territories to prevent useless placement of armies.

  IF (UBufferGet(50)=0) AND BeforeFirstAttackTurn THEN
  BEGIN
    PT := 0;
    FOR T:=1 TO 10 DO  IF PActive(T) AND (PMe <> T) THEN PT:=PT+1;
    B:=URandom(PT)+1;
    FOR T:=1 TO 10 DO
    BEGIN
      IF PActive(T) AND (PMe <> T) THEN B:=B-1;
      IF (B=0) AND (UBufferGet(50)=0) THEN UBufferSet(50,T)
    END;
    ULog(PName(PMe),' here. Chosen master: ',PName(UBufferGet(50)));
    UBufferSet(2,0)
  END;

  T:=42;
  REPEAT
    IF TIsFront(T) THEN         // territory is mine and front
    BEGIN
      Ratio := TPressure(T) / TArmies(T);

      //Increase the pressure if there is only one territory attackable (easy defending)
      IF TFrontsCount(T)=1 THEN
      BEGIN
        ET:=TFront(T,1);
        IF EnemyTerritoryIsEnclosed(ET) THEN
        BEGIN
          IF Ratio > 2.1 THEN Ratio:=0.5;  // Forceratio is already big enough to kill this front, prefer other fronts
          Ratio:=Ratio*3                   // eliminate this front!
        END
         ELSE Ratio:=Ratio*2;

        IF NOT BeforeFirstAttackTurn THEN
        // Strengthen only the strongest territory bordering this enemyterritory to prevent
        // useless placement of armies which become useless after conquering the territory.
         FOR B:=1 TO TBordersCount(ET) DO
          IF TArmies(TBorder(ET,B))>TArmies(T) THEN Ratio:=0; //bigger army found, reinforcement of this territory not needed
      END;  //IF TFrontsCount(T)=1
      //too much borders makes TPressure shoot high
      IF TFrontsCount(T)>2 THEN Ratio:=Ratio/(TFrontsCount(T)/2);

      //Defend Territories bordering owned continent
      FOR B:=1 TO TBordersCount(T) DO
      BEGIN
        ET:=TBorder(T,B);
        IF COwner(TContinent(ET))<>0 THEN Ratio:=Ratio*1.5
      END;

      // IF continent is at least half mine, multiply the ratio by the 4 * CRatio owned/total territories on continent
      CAnalysis(TContinent(T),PT,PA,ET,EA);
      CRatio := PT/(PT+ET);
      IF CRatio > 0.5 THEN Ratio := Ratio* 4*CRatio;

      IF TerritoryEnclosedByMyMaster(T) THEN Ratio := 0.1;

      IF Ratio>MaxRatio THEN
      BEGIN
        ToTerritory:=T;
        MaxRatio:=Ratio
      END;
    END;
    T:=T-1
  UNTIL T<1
END;  //PROCEDURE Placement



PROCEDURE Attack;
VAR
  T, B, EnemyT, EnemyA : Integer;
  Ratio, MaxRatio, MinAttackRatio: Double;
  SuspendDoOrDie : Boolean;

  //Function returns false if the territory to attack would become a front of me
  FUNCTION EnemyTerritoryIsEnclosed(TT:Integer):Boolean;
  VAR BT, BTF : Integer;
      ETIE : Boolean;
  BEGIN
    ETIE := True;
    FOR BTF := 1 TO TBordersCount(TT) DO
    BEGIN
      BT := TBorder (TT,BTF);
      IF TOwner(BT)<>PMe THEN ETIE:=False;  //Territory would remain a front
    END;
    result:=ETIE;
  END; //function EnemyTerritoryIsEnclosed

BEGIN

  //Suspend "DoOrDie"
  SuspendDoOrDie := False;
  FromTerritory:=UBufferGet(48);
  ToTerritory:=UBufferGet(49);
  IF TIsMine(ToTerritory) THEN           // "do or die"-attack has been successful
   SuspendDoOrDie := True;
  IF TArmies(FromTerritory)=1 THEN SuspendDoOrDie := True; //not enough armies to attack
  IF (TArmies(FromTerritory)-1)/TArmies(ToTerritory)<0.4 THEN SuspendDoOrDie:=True;  //lost too many armies already
  IF SuspendDoOrDie THEN
  BEGIN
    ToTerritory:=0;
    FromTerritory:=0;
    UBufferSet(48,0);
    UBufferSet(49,0)
  END; //Suspend "DoOrDie"

  IF SConquest THEN            // if have one conquest already
    MinAttackRatio:=1.5        // attack only if enemy is outnumbered 3 to 2 (more aggresive? Lower Ratio (e.g. MaxRatio:=1.3))
  ELSE MinAttackRatio:=0.75;   // else attack if max. outnumbered by 2 to 3 (increase the chance to get a card)
                               // MinAttackRatio is decreased by one-third if the enemy territory is completely enclosed by me
  MaxRatio := MinAttackRatio;

  IF (FromTerritory=0) OR (ToTerritory=0) THEN
  BEGIN
    T:=42;
    REPEAT
      IF TIsFront(T) AND (TArmies(T)>1) THEN   // territory is mine, front and attack is possible
      BEGIN
        FOR B:=1 TO TBordersCount(T) DO
        BEGIN
          EnemyT := TBorder(T,B);
          IF (NOT TIsMine(EnemyT)) AND (TOwner(EnemyT)<>UBufferGet(50)) THEN
          BEGIN
            Ratio:=(TArmies(T)-1)/TArmies(EnemyT);     // an extra of 1 army needed (the defending one)
            IF EnemyTerritoryIsEnclosed(EnemyT) AND (Ratio>=2*MinAttackRatio/3) THEN Ratio:=Ratio*3;  //Do attack if the enemy territory is completely enclosed and two-thirds of the minimal forceratio is reached
            IF Ratio >= MinAttackRatio THEN            // make sure, the force ratio is above MinAttackRatio
            BEGIN
              IF TFrontsCount(T)=1 THEN Ratio:=Ratio*2;     // prefer attacking of territories which do not increase the number of territories to defend (makes ratio*6 if territory is enclosed, it's a must!)
              IF TContinent(T)=TContinent(EnemyT) THEN Ratio:=Ratio*2; // prefer attacking of territories on same continent
              IF COwner(TContinent(EnemyT))<>0 THEN Ratio:=Ratio*2.1;  // take the army-bonus the enemy gets.
              IF PTerritoriesCount(TOwner(EnemyT))=1 THEN Ratio:=Ratio*5;  // prefer attacking of the last territory the enemy owns (to conquer his cards)
              IF PProgram(TOwner(EnemyT))=PProgram(PMe) THEN Ratio:=Ratio*0.90; // prefer attacking of someone else than a good friend (anyone who has the same program) (but I do still attack them, if not well defended)

              IF Ratio>=MaxRatio THEN                  // if attack is more prefered than last one, do set new attack
              BEGIN
                FromTerritory:=T;
                ToTerritory:=EnemyT;
                MaxRatio:=Ratio
              END;  //IF Ratio>=MaxRatio
            END;  //IF Ratio>=MinAttackRatio
          END;  //IF NOT TIsMine
        END   //FOR B:=1 TO TBordersCount
      END;  //IF TIsFront
      T:=T-1
    UNTIL T<1;

    // check if good enough as "DoOrDie"
    Ratio:=(TArmies(FromTerritory)-1)/TArmies(ToTerritory);
    IF Ratio>2.5 THEN
    BEGIN
      UBufferSet(48,FromTerritory);
      UBufferSet(49,ToTerritory)
    END;

    IF TOwner(ToTerritory)=UBufferGet(50) THEN
     UMessage('For some unknown reason, I have chosen to betray my master',#10,
              'Attacking ',PName(UBufferGet(50)),'s''', PName(ToTerritory),' from ',TName(FromTerritory),'.',#10,
              'Please punish me for doing this!');     

  END;  //IF (FromTerritory=0) OR (ToTerritory=0)
END;  //PROCEDURE Attack



PROCEDURE Occupation;
VAR Skip : Boolean;

  FUNCTION TerritoryEnclosedByMyMaster(TT:Integer):Boolean;
  VAR CTEBMM, BTEBMM : Integer;
      TEBMM : Boolean;
  BEGIN
    TEBMM := true;
    FOR BTEBMM:=1 TO TBordersCount(TT) DO
    BEGIN
      IF (TOwner(TBorder(TT,BTEBMM))<>UBufferGet(50)) AND (TOwner(TBorder(TT,BTEBMM))<>PMe) THEN TEBMM:=false;
    END;
    result:=TEBMM
  END; //function TerritoryEnclosedByMyMaster(TT:Integer):Boolean;

BEGIN
  // if both territories are 'front' balance armies, except if both armies border the same
  //  enemy territory as only front. In this case all armies will be moved (to increase attackpossibility).
  // if "To" is front move all armies in the conquered territory except the one which must stay
  // if none of them is front, do not move armies

  Skip:=false;
  IF TerritoryEnclosedByMyMaster(ToTerritory) THEN Skip:=true;
  IF TerritoryEnclosedByMyMaster(FromTerritory) THEN
  BEGIN
    Skip:=true;
    Armies:=TArmies(FromTerritory)-1
  END;
  
  IF NOT Skip THEN
  BEGIN
    Armies:=0;
    IF TIsFront(FromTerritory) AND TIsFront(ToTerritory) THEN
    BEGIN
      IF TArmies(FromTerritory)>TArmies(ToTerritory) THEN
      BEGIN
        IF (TFrontsCount(FromTerritory)=1) AND (TFrontsCount(ToTerritory)=1) THEN
        BEGIN      // It makes a following attack easier if the troops stay together, therefore move all
          IF (TFront(FromTerritory,1)=TFront(ToTerritory,1)) AND ((TArmies(FromTerritory)+2)/(TArmies(TFront(ToTerritory,1)))>1.2) THEN Armies:=TArmies(FromTerritory)-1;
        END
        ELSE
         Armies:=(TArmies(FromTerritory)-TArmies(ToTerritory)) div 2
      END;  //IF TArmies(FromTerritory)>...
    END
    ELSE IF TIsFront(ToTerritory) THEN
     Armies:=TArmies(FromTerritory)-1;
  END
END;  //PROCEDURE Occupation




PROCEDURE Fortification;
VAR T, FromT, BiggestArmy, B, MinArmy, MaxArmy  :Integer;

  FUNCTION SlaveTIsFront(STIFT:Integer):Boolean;
  VAR STIF  :Boolean;
      STIFB :Integer;
  BEGIN
    STIF:=false;
    IF TOwner(STIF)=PMe THEN
     FOR STIFB:=1 TO TBordersCount(STIFT) DO
     BEGIN
       IF (TOwner(TBorder(STIFT,STIFB))<>PMe) AND (TOwner(TBorder(STIFT,STIFB))<>UBufferGet(50)) THEN STIF:=true;
     END;
    result:=STIF    
  END; //function SlaveTIsFront(STIF:Integer):Boolean;

BEGIN
  //Search weakest front and fortify it with the biggest army 
  //standing on a bordering, non-front territory.
  //If there are several weakest fronts,
  //fortify the one with the biggest fortifying army
  //If it is not possible to fortify a front, search the biggest army on a non-front
  //territory and move it to any other bordering territory

  MinArmy:=1500;    //smallest frontarmy must be smaller than this one (should be no problem...)
  Armies:=0;        //Do not move armies until moveable army found
  BiggestArmy:=1;   //Need at least 2 Armies to have one to move [TArmies(FromT) > BiggestArmy]
  ToTerritory:=0;
  FromTerritory:=0;
  FromT:=0; //From Territory
  T:=42;
  REPEAT
    IF SlaveTIsFront(T) AND (TArmies(T)<=MinArmy) THEN  //SlaveTIsFront(T) can only be true if TIsMine(T) is True
    BEGIN
      FOR B:=1 TO TBordersCount(T) DO
      BEGIN
        FromT:=TBorder(T,B);
        IF (TIsMine(FromT) AND (NOT SlaveTIsFront(FromT))) AND (TArmies(FromT)>BiggestArmy) THEN
        BEGIN
          MinArmy:=TArmies(T);
          FromTerritory:=FromT;
          ToTerritory:=T;
          Armies:=TArmies(FromTerritory)-1;
          BiggestArmy:=Armies
        END;
      END  // FOR B:=1 TO
    END;  //IF SlaveTIsFront(T)...
    T:=T-1
  UNTIL T<1;

  IF Armies = 0 THEN   //no fortification of a front possible, move the biggest other army anywhere
  BEGIN
    MaxArmy := 1;
    T:=42;
    REPEAT
      IF TIsMine(T) AND NOT SlaveTIsFront(T) THEN    // territory is mine and not front
      BEGIN
        IF TArmies(T)>MaxArmy THEN
        BEGIN
          MaxArmy := TArmies(T);
          FromTerritory := T;
        END;
      END;
      T:=T-1
    UNTIL T<1;
    // if there are armies to move...
    // move armies to a random bordering territory
    IF FromTerritory>0 THEN
    BEGIN
      B:=URandom(TBordersCount(FromTerritory))+1;
      ToTerritory:=TBorder(FromTerritory,B);    // Random movement can be very surprising
      // Move all armies to destination (except the one which must stay)
      Armies:=TArmies(FromTerritory)-1
    END;
  END;  //IF Armies = 0

END;  //PROCEDURE Fortification
